{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/Users/oo/Desktop/APPutvekling/ExamenProject/screens/gameWinnerScreen.js\",\n    _this2 = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport { useEffect, useState } from 'react/cjs/react.development';\nimport { AuthContext } from \"../context/AuthContext\";\nimport { GetUsers } from \"../firebase/Firebase\";\nimport { useNavigation } from '@react-navigation/native';\nexport default function GameWinner(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var gameKey = route.params.gameKey;\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  var _useState = useState(['']),\n      _useState2 = _slicedToArray(_useState, 2),\n      userAry = _useState2[0],\n      setUserAry = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      winner = _useState4[0],\n      setWinner = _useState4[1];\n\n  var SortOutWinner = function SortOutWinner() {\n    var highScore = 0;\n    var highScoreName = '';\n\n    for (var index = 0; index < userAry.length; index++) {\n      if (userAry[index].userScore > highScore) {\n        highScore = userAry[index].userScore;\n        highScoreName = userAry[index].userDisplayName;\n      }\n    }\n\n    return highScoreName;\n  };\n\n  useEffect(function () {\n    GetUsers(setUserAry, gameKey);\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      height: '50%',\n      justifyContent: 'space-evenly'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.titleView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Score\")), React.createElement(View, {\n    style: styles.QuestionMaserView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.QuestionMaserText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Question Master!!!\"), React.createElement(Text, {\n    style: styles.QuestionMaserUserNameText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, SortOutWinner()))), React.createElement(View, {\n    style: {\n      backgroundColor: 'black',\n      height: 3,\n      width: '90%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      width: '100%',\n      height: '50%',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      height: '70%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, userAry.map(function (element, index) {\n    return React.createElement(ScoreComponent, {\n      userScore: element.userScore,\n      userName: element.userDisplayName,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    });\n  }), React.createElement(ScoreComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      height: '30%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate('home');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      fontSize: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Quit Game\")))));\n}\n\nvar ScoreComponent = function ScoreComponent(_ref2) {\n  var userScore = _ref2.userScore,\n      userName = _ref2.userName;\n  return React.createElement(View, {\n    style: styles.UserTableView,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.UserTableText), {}, {\n      marginLeft: '30%'\n    }),\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, userName), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.UserTableText), {}, {\n      marginRight: '30%'\n    }),\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, userScore));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#146B66',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  titleView: {\n    justifyContent: 'center',\n    width: '100%',\n    alignItems: 'center'\n  },\n  QuestionMaserView: {\n    justifyContent: 'center',\n    width: '100%',\n    alignItems: 'center'\n  },\n  UserTableView: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  titleText: {\n    fontSize: 22\n  },\n  QuestionMaserText: {\n    fontSize: 45,\n    fontWeight: 'bold'\n  },\n  QuestionMaserUserNameText: {\n    fontSize: 45,\n    marginTop: 20,\n    fontWeight: '500'\n  },\n  UserTableText: {\n    fontSize: 40,\n    marginTop: 15\n  },\n  button: {\n    backgroundColor: '#AFEFDF',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 25,\n    marginRight: 25,\n    borderRadius: 10,\n    height: '80%',\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/Users/oo/Desktop/APPutvekling/ExamenProject/screens/gameWinnerScreen.js"],"names":["React","useContext","ScrollView","TouchableOpacity","useEffect","useState","AuthContext","GetUsers","useNavigation","GameWinner","route","navigation","gameKey","params","user","userAry","setUserAry","winner","setWinner","SortOutWinner","highScore","highScoreName","index","length","userScore","userDisplayName","styles","container","width","height","justifyContent","titleView","titleText","QuestionMaserView","QuestionMaserText","QuestionMaserUserNameText","backgroundColor","map","element","button","navigate","fontWeight","fontSize","ScoreComponent","userName","UserTableView","UserTableText","marginLeft","marginRight","StyleSheet","create","flex","alignItems","flexDirection","marginTop","borderRadius"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;AAEA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,8BAA7C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,6BAApC;AACA,SAASC,WAAT;AACA,SAASC,QAAT;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,eAAe,SAASC,UAAT,OAA+B;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;AAC5C,MAAMC,UAAU,GAAGH,aAAa,EAAhC;AAD4C,MAEpCI,OAFoC,GAExBF,KAAK,CAACG,MAFkB,CAEpCD,OAFoC;;AAAA,oBAG3BX,UAAU,CAACK,WAAD,CAHiB;AAAA,MAGpCQ,IAHoC,eAGpCA,IAHoC;;AAAA,kBAIdT,QAAQ,CAAC,CAAC,EAAD,CAAD,CAJM;AAAA;AAAA,MAIrCU,OAJqC;AAAA,MAI5BC,UAJ4B;;AAAA,mBAKhBX,QAAQ,CAAC,EAAD,CALQ;AAAA;AAAA,MAKrCY,MALqC;AAAA,MAK7BC,SAL6B;;AAO5C,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAIC,SAAS,GAAG,CAAhB;AACA,QAAIC,aAAa,GAAG,EAApB;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGP,OAAO,CAACQ,MAApC,EAA4CD,KAAK,EAAjD,EAAqD;AACnD,UAAIP,OAAO,CAACO,KAAD,CAAP,CAAeE,SAAf,GAA2BJ,SAA/B,EAA0C;AACxCA,QAAAA,SAAS,GAAGL,OAAO,CAACO,KAAD,CAAP,CAAeE,SAA3B;AACAH,QAAAA,aAAa,GAAGN,OAAO,CAACO,KAAD,CAAP,CAAeG,eAA/B;AACD;AACF;;AACD,WAAOJ,aAAP;AACD,GAVD;;AAYAjB,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,QAAQ,CAACS,UAAD,EAAaJ,OAAb,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEc,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,KAFH;AAGLC,MAAAA,cAAc,EAAE;AAHX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAPF,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,yBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,aAAa,EADhB,CAFF,CAVF,CADF,EAkBE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLiB,MAAAA,eAAe,EAAE,OADZ;AAELP,MAAAA,MAAM,EAAE,CAFH;AAGLD,MAAAA,KAAK,EAAE;AAHF,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,EAyBE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,KAFH;AAGLC,MAAAA,cAAc,EAAE;AAHX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAE;AAAV,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,OAAO,CAACsB,GAAR,CAAY,UAACC,OAAD,EAAUhB,KAAV;AAAA,WACX,oBAAC,cAAD;AACE,MAAA,SAAS,EAAEgB,OAAO,CAACd,SADrB;AAEE,MAAA,QAAQ,EAAEc,OAAO,CAACb,eAFpB;AAGE,MAAA,GAAG,EAAEH,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW;AAAA,GAAZ,CADH,EAQE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAPF,EAiBE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLO,MAAAA,MAAM,EAAE;AADH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEH,MAAM,CAACa,MADhB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAM5B,UAAU,CAAC6B,QAAX,CAAoB,MAApB,CAAN;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,QAAQ,EAAE;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CALF,CAjBF,CAzBF,CADF;AA0DD;;AAED,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,QAA6B;AAAA,MAA1BnB,SAA0B,SAA1BA,SAA0B;AAAA,MAAfoB,QAAe,SAAfA,QAAe;AAClD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACmB,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAOnB,MAAM,CAACoB,aAAd;AAA6BC,MAAAA,UAAU,EAAE;AAAzC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QADH,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAOlB,MAAM,CAACoB,aAAd;AAA6BE,MAAAA,WAAW,EAAE;AAA1C,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,SADH,CAJF,CADF;AAUD,CAXD;;AAaA,IAAME,MAAM,GAAGuB,UAAU,CAACC,MAAX,CAAkB;AAC/BvB,EAAAA,SAAS,EAAE;AACTwB,IAAAA,IAAI,EAAE,CADG;AAETf,IAAAA,eAAe,EAAE,SAFR;AAGTN,IAAAA,cAAc,EAAE,eAHP;AAITsB,IAAAA,UAAU,EAAE;AAJH,GADoB;AAO/BrB,EAAAA,SAAS,EAAE;AACTD,IAAAA,cAAc,EAAE,QADP;AAETF,IAAAA,KAAK,EAAE,MAFE;AAGTwB,IAAAA,UAAU,EAAE;AAHH,GAPoB;AAY/BnB,EAAAA,iBAAiB,EAAE;AACjBH,IAAAA,cAAc,EAAE,QADC;AAEjBF,IAAAA,KAAK,EAAE,MAFU;AAGjBwB,IAAAA,UAAU,EAAE;AAHK,GAZY;AAiB/BP,EAAAA,aAAa,EAAE;AACbQ,IAAAA,aAAa,EAAE,KADF;AAEbzB,IAAAA,KAAK,EAAE,MAFM;AAGbE,IAAAA,cAAc,EAAE,eAHH;AAIbsB,IAAAA,UAAU,EAAE;AAJC,GAjBgB;AAuB/BpB,EAAAA,SAAS,EAAE;AACTU,IAAAA,QAAQ,EAAE;AADD,GAvBoB;AA0B/BR,EAAAA,iBAAiB,EAAE;AACjBQ,IAAAA,QAAQ,EAAE,EADO;AAEjBD,IAAAA,UAAU,EAAE;AAFK,GA1BY;AA8B/BN,EAAAA,yBAAyB,EAAE;AACzBO,IAAAA,QAAQ,EAAE,EADe;AAEzBY,IAAAA,SAAS,EAAE,EAFc;AAGzBb,IAAAA,UAAU,EAAE;AAHa,GA9BI;AAmC/BK,EAAAA,aAAa,EAAE;AACbJ,IAAAA,QAAQ,EAAE,EADG;AAEbY,IAAAA,SAAS,EAAE;AAFE,GAnCgB;AAuC/Bf,EAAAA,MAAM,EAAE;AACNH,IAAAA,eAAe,EAAE,SADX;AAENN,IAAAA,cAAc,EAAE,QAFV;AAGNsB,IAAAA,UAAU,EAAE,QAHN;AAINL,IAAAA,UAAU,EAAE,EAJN;AAKNC,IAAAA,WAAW,EAAE,EALP;AAMNO,IAAAA,YAAY,EAAE,EANR;AAON1B,IAAAA,MAAM,EAAE,KAPF;AAQNyB,IAAAA,SAAS,EAAE;AARL;AAvCuB,CAAlB,CAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { SafeAreaView, StyleSheet, Text, View } from 'react-native';\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport { useEffect, useState } from 'react/cjs/react.development';\nimport { AuthContext } from '../context/AuthContext';\nimport { GetUsers } from '../firebase/Firebase';\nimport { useNavigation } from '@react-navigation/native';\n\nexport default function GameWinner({ route }) {\n  const navigation = useNavigation();\n  const { gameKey } = route.params;\n  const { user } = useContext(AuthContext);\n  const [userAry, setUserAry] = useState(['']);\n  const [winner, setWinner] = useState('');\n\n  const SortOutWinner = () => {\n    let highScore = 0;\n    let highScoreName = '';\n    for (let index = 0; index < userAry.length; index++) {\n      if (userAry[index].userScore > highScore) {\n        highScore = userAry[index].userScore;\n        highScoreName = userAry[index].userDisplayName;\n      }\n    }\n    return highScoreName;\n  };\n\n  useEffect(() => {\n    GetUsers(setUserAry, gameKey);\n  }, []);\n  return (\n    <SafeAreaView style={styles.container}>\n      <View\n        style={{\n          width: '100%',\n          height: '50%',\n          justifyContent: 'space-evenly',\n        }}\n      >\n        <View style={styles.titleView}>\n          <Text style={styles.titleText}>Score</Text>\n        </View>\n        <View style={styles.QuestionMaserView}>\n          <Text style={styles.QuestionMaserText}>Question Master!!!</Text>\n          <Text style={styles.QuestionMaserUserNameText}>\n            {SortOutWinner()}\n          </Text>\n        </View>\n      </View>\n      <View\n        style={{\n          backgroundColor: 'black',\n          height: 3,\n          width: '90%',\n        }}\n      ></View>\n      <View\n        style={{\n          width: '100%',\n          height: '50%',\n          justifyContent: 'space-between',\n        }}\n      >\n        <ScrollView style={{ height: '70%' }}>\n          {userAry.map((element, index) => (\n            <ScoreComponent\n              userScore={element.userScore}\n              userName={element.userDisplayName}\n              key={index}\n            />\n          ))}\n          <ScoreComponent />\n        </ScrollView>\n        <View\n          style={{\n            height: '30%',\n          }}\n        >\n          <TouchableOpacity\n            style={styles.button}\n            onPress={() => navigation.navigate('home')}\n          >\n            <Text style={{ fontWeight: 'bold', fontSize: 32 }}>Quit Game</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst ScoreComponent = ({ userScore, userName }) => {\n  return (\n    <View style={styles.UserTableView}>\n      <Text style={{ ...styles.UserTableText, marginLeft: '30%' }}>\n        {userName}\n      </Text>\n      <Text style={{ ...styles.UserTableText, marginRight: '30%' }}>\n        {userScore}\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#146B66',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  titleView: {\n    justifyContent: 'center',\n    width: '100%',\n    alignItems: 'center',\n  },\n  QuestionMaserView: {\n    justifyContent: 'center',\n    width: '100%',\n    alignItems: 'center',\n  },\n  UserTableView: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  titleText: {\n    fontSize: 22,\n  },\n  QuestionMaserText: {\n    fontSize: 45,\n    fontWeight: 'bold',\n  },\n  QuestionMaserUserNameText: {\n    fontSize: 45,\n    marginTop: 20,\n    fontWeight: '500',\n  },\n  UserTableText: {\n    fontSize: 40,\n    marginTop: 15,\n  },\n  button: {\n    backgroundColor: '#AFEFDF',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 25,\n    marginRight: 25,\n    borderRadius: 10,\n    height: '80%',\n    marginTop: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}