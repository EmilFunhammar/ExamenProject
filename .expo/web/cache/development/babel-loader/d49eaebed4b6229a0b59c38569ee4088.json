{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport firebase, { firestore } from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport 'firebase/functions';\nimport 'firebase/storage';\nvar firebaseConfig = {\n  apiKey: 'AIzaSyDfjQkD4UeSNfs1yup3oprY9sQx0ZcH4Uk',\n  authDomain: 'examenproject-211e4.firebaseapp.com',\n  projectId: 'examenproject-211e4',\n  storageBucket: 'examenproject-211e4.appspot.com',\n  messagingSenderId: '321759435624',\n  appId: '1:321759435624:web:847f5ac5e161152646d4dd'\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport var auth = firebase.auth();\nexport function SaveUserAnswers(userAnswer, gameKey, userEmail) {\n  var ary = [];\n  var userArrayRef = firebase.firestore().collection('GameSession').doc(gameKey);\n  userArrayRef.get().then(function (doc) {\n    ary = _toConsumableArray(doc.data().users);\n\n    for (var index = 0; index < ary.length; index++) {\n      if (ary[index].userEmail === userEmail) {\n        ary[index].userAnswer = userAnswer;\n        userArrayRef.update({\n          users: ary\n        });\n      }\n    }\n  });\n}\nexport function GetUsers(setUserArray, gameKey) {\n  firebase.firestore().collection('GameSession').doc(gameKey).get().then(function (doc) {\n    setUserArray(doc.data().users);\n  }).catch(function (error) {\n    console.log('error', error);\n  });\n}\nexport function GetGameQuestions(setGameQuestions) {\n  var questionArray = [];\n  firebase.firestore().collection('Questions').get().then(function (querySnapshot) {\n    querySnapshot.forEach(function (doc) {\n      questionArray.push(doc.data().question);\n    });\n    questionArray.sort(function () {\n      return Math.random() - 0.5;\n    });\n  });\n  setGameQuestions(questionArray);\n}\nexport function CreateGameSetup(questionsArray, sessionName, user) {\n  var userScore = 0;\n  var userEmail = user.email;\n  var userDisplayName = user.displayName;\n  var userAnswer = '';\n  var userAry = {\n    userEmail: userEmail,\n    userDisplayName: userDisplayName,\n    userScore: userScore,\n    userAnswer: userAnswer\n  };\n  var ref = firebase.firestore().collection('GameSession').doc(sessionName);\n  ref.set({\n    UsersAnswerd: 0,\n    ActiveQuestion: 0,\n    Questions: questionsArray,\n    users: firebase.firestore.FieldValue.arrayUnion(userAry)\n  }).then(function () {}).catch(function (error) {\n    return console.log('error', error);\n  });\n}\nexport function doesDocExist(gameKey, setIfDocExsists) {\n  firebase.firestore().collection('GameSession').doc(gameKey).get().then(function (doc) {\n    if (doc.exists) {\n      setIfDocExsists(true);\n    }\n  });\n}\nexport function AddUserToGame(userDisplayName, userEmail, gameKey, setIfDocExsists) {\n  var userScore = 0;\n  var userAnswer = '';\n  var ary = {\n    userScore: userScore,\n    userEmail: userEmail,\n    userDisplayName: userDisplayName,\n    userAnswer: userAnswer\n  };\n  firebase.firestore().collection('GameSession').doc(gameKey).get().then(function (doc) {\n    if (doc.exists) {\n      firebase.firestore().collection('GameSession').doc(gameKey).update({\n        users: firebase.firestore.FieldValue.arrayUnion(ary)\n      });\n      setIfDocExsists(true);\n    } else {\n      setIfDocExsists(false);\n    }\n  });\n}\nexport function UpdateUserName(currentUserName) {\n  var currentUser = firebase.auth().currentUser;\n  currentUser.updateProfile({\n    displayName: currentUserName\n  }).then(function () {}).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function SnapshotUserAnswerd(setAnswerdNum, gameKey) {\n  firebase.firestore().collection('GameSession').doc(gameKey).onSnapshot(function (doc) {\n    setAnswerdNum(doc.data().UsersAnswerd);\n  });\n}\nexport function ResetAnswerdNum(gameKey) {\n  console.log('ResetAnswerdNum', gameKey);\n  firebase.firestore().collection('GameSession').doc(gameKey).update({\n    UsersAnswerd: 0\n  }).then(function () {}).catch(function (error) {\n    return console.log('error', error);\n  });\n}\nexport function UpdateAnswerdNum(AnswerdNum, gameKey) {\n  firebase.firestore().collection('GameSession').doc(gameKey).update({\n    UsersAnswerd: AnswerdNum + 1\n  }).then(function () {}).catch(function (error) {\n    return console.log('error', error);\n  });\n}\nexport function UpdateActiveQuestion(activeQuestion, gameKey) {\n  firebase.firestore().collection('GameSession').doc(gameKey).update({\n    ActiveQuestion: activeQuestion + 1\n  }).then(function () {}).catch(function (error) {\n    return console.log('error', error);\n  });\n}\nexport function SnapshotHasAnswers(setIfAnswerd) {\n  firebase.firestore().collection('GameSession').doc('pilot1').onSnapshot(function (doc) {\n    setIfAnswerd(doc.data().users);\n  });\n}\nexport function SnapShotActiveQuestion(setActiveQuestion, gameKey) {\n  firebase.firestore().collection('GameSession').doc(gameKey).onSnapshot(function (doc) {\n    setActiveQuestion(doc.data().ActiveQuestion);\n  });\n}\nexport function GetQuestionInfo(setQuestionArray, gameKey) {\n  var ary = [];\n  firebase.firestore().collection('GameSession').doc(gameKey).get().then(function (doc) {\n    ary = _toConsumableArray(doc.data().Questions);\n\n    for (var index = 0; index < ary.length; index++) {\n      ary[index].Answers.sort(function () {\n        return Math.random() - 0.5;\n      });\n    }\n\n    var size = 10;\n    var items = ary.slice(0, size);\n    setQuestionArray(items);\n  }).catch(function (error) {\n    return console.log('error', error);\n  });\n}\nexport function SnapShotUsers(setUserArray, gameKey) {\n  firebase.firestore().collection('GameSession').doc(gameKey).onSnapshot(function (doc) {\n    setUserArray(doc.data().users);\n  });\n}\nexport function UpdateUserScore(userEmail, gameKey) {\n  var ary = [];\n  var userArrayRef = firebase.firestore().collection('GameSession').doc(gameKey);\n  userArrayRef.get().then(function (doc) {\n    ary = _toConsumableArray(doc.data().users);\n\n    for (var index = 0; index < ary.length; index++) {\n      if (ary[index].userEmail === userEmail) {\n        ary[index].userScore += 1;\n        userArrayRef.update({\n          users: ary\n        });\n      }\n    }\n  });\n}","map":{"version":3,"sources":["/Users/oo/Desktop/APPutvekling/ExamenProject/firebase/Firebase.js"],"names":["firebase","firestore","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","apps","length","initializeApp","auth","SaveUserAnswers","userAnswer","gameKey","userEmail","ary","userArrayRef","collection","doc","get","then","data","users","index","update","GetUsers","setUserArray","catch","error","console","log","GetGameQuestions","setGameQuestions","questionArray","querySnapshot","forEach","push","question","sort","Math","random","CreateGameSetup","questionsArray","sessionName","user","userScore","email","userDisplayName","displayName","userAry","ref","set","UsersAnswerd","ActiveQuestion","Questions","FieldValue","arrayUnion","doesDocExist","setIfDocExsists","exists","AddUserToGame","UpdateUserName","currentUserName","currentUser","updateProfile","SnapshotUserAnswerd","setAnswerdNum","onSnapshot","ResetAnswerdNum","UpdateAnswerdNum","AnswerdNum","UpdateActiveQuestion","activeQuestion","SnapshotHasAnswers","setIfAnswerd","SnapShotActiveQuestion","setActiveQuestion","GetQuestionInfo","setQuestionArray","Answers","size","items","slice","SnapShotUsers","UpdateUserScore"],"mappings":"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","sourcesContent":["import firebase, { firestore } from 'firebase';\n//import React, { useContext } from 'react';\n\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport 'firebase/functions';\nimport 'firebase/storage';\n\n//import { AuthContext } from './AuthContext';\n\nvar firebaseConfig = {\n  apiKey: 'AIzaSyDfjQkD4UeSNfs1yup3oprY9sQx0ZcH4Uk',\n  authDomain: 'examenproject-211e4.firebaseapp.com',\n  projectId: 'examenproject-211e4',\n  storageBucket: 'examenproject-211e4.appspot.com',\n  messagingSenderId: '321759435624',\n  appId: '1:321759435624:web:847f5ac5e161152646d4dd',\n};\n\n//const app = firebase.initializeApp(firebaseConfig);\nif (!firebase.apps.length) {\n  // const firebaseApp =\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport const auth = firebase.auth();\nexport function SaveUserAnswers(userAnswer, gameKey, userEmail) {\n  let ary = [];\n  var userArrayRef = firebase\n    .firestore()\n    .collection('GameSession')\n    .doc(gameKey);\n\n  userArrayRef.get().then((doc) => {\n    ary = [...doc.data().users];\n    for (let index = 0; index < ary.length; index++) {\n      if (ary[index].userEmail === userEmail) {\n        ary[index].userAnswer = userAnswer;\n        userArrayRef.update({\n          users: ary,\n        });\n      }\n    }\n  });\n}\n\n//Get users Score and name\nexport function GetUsers(setUserArray, gameKey) {\n  //console.log('SnapShotUsers', gameKey);\n\n  firebase\n    .firestore()\n    .collection('GameSession')\n    .doc(gameKey)\n    .get()\n    .then((doc) => {\n      setUserArray(doc.data().users);\n    })\n    .catch((error) => {\n      console.log('error', error);\n    });\n}\n\n// Get questions from Firebase\nexport function GetGameQuestions(setGameQuestions) {\n  let questionArray = [];\n  firebase\n    .firestore()\n    .collection('Questions')\n    .get()\n    .then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        questionArray.push(doc.data().question);\n      });\n      questionArray.sort(() => Math.random() - 0.5);\n      //console.log('här ', questionArray);\n    });\n  setGameQuestions(questionArray);\n}\n\n//UploadGameQuestion\nexport function CreateGameSetup(questionsArray, sessionName, user) {\n  let userScore = 0;\n  let userEmail = user.email;\n  let userDisplayName = user.displayName;\n  let userAnswer = '';\n  let userAry = { userEmail, userDisplayName, userScore, userAnswer };\n\n  let ref = firebase.firestore().collection('GameSession').doc(sessionName);\n\n  ref\n    .set({\n      UsersAnswerd: 0,\n      ActiveQuestion: 0,\n      Questions: questionsArray,\n      users: firebase.firestore.FieldValue.arrayUnion(userAry),\n    })\n    .then(() => {\n      /*  ref.update({\n        users: firebase.firestore.FieldValue.arrayUnion(userAry),\n      }); */\n      //console.log('game Created');\n    })\n    .catch((error) => console.log('error', error));\n}\n\nexport function doesDocExist(gameKey, setIfDocExsists) {\n  firebase\n    .firestore()\n    .collection('GameSession')\n    .doc(gameKey)\n    .get()\n    .then((doc) => {\n      if (doc.exists) {\n        setIfDocExsists(true);\n      }\n    });\n}\n\nexport function AddUserToGame(\n  userDisplayName,\n  userEmail,\n  gameKey,\n  setIfDocExsists\n) {\n  let userScore = 0;\n  let userAnswer = '';\n  let ary = { userScore, userEmail, userDisplayName, userAnswer };\n  firebase\n    .firestore()\n    .collection('GameSession')\n    .doc(gameKey)\n    .get()\n    .then((doc) => {\n      if (doc.exists) {\n        firebase\n          .firestore()\n          .collection('GameSession')\n          .doc(gameKey)\n          .update({\n            users: firebase.firestore.FieldValue.arrayUnion(ary),\n          });\n        setIfDocExsists(true);\n      } else {\n        setIfDocExsists(false);\n      }\n    });\n}\n\nexport function UpdateUserName(currentUserName) {\n  const currentUser = firebase.auth().currentUser;\n  currentUser\n    .updateProfile({\n      displayName: currentUserName,\n    })\n    .then(function () {\n      //console.log('document sucssesfuly');\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\n// Update ActiveQuestion\n/* export function UpdateActiveQuestion() {\n  firebase.firestore().collection('GameSession').doc('pilot1').update({})\n}\n */\nexport function SnapshotUserAnswerd(setAnswerdNum, gameKey) {\n  firebase\n    .firestore()\n    .collection('GameSession')\n    .doc(gameKey)\n    .onSnapshot((doc) => {\n      setAnswerdNum(doc.data().UsersAnswerd);\n      //console.log('härsds', doc.data().UsersAnswerd);\n    });\n}\n//Reset AnswerdNum\nexport function ResetAnswerdNum(gameKey) {\n  console.log('ResetAnswerdNum', gameKey);\n\n  firebase\n    .firestore()\n    .collection('GameSession')\n    .doc(gameKey)\n    .update({\n      UsersAnswerd: 0,\n    })\n    .then(() => {\n      //console.log('Document successfully updated!');\n    })\n    .catch((error) => console.log('error', error));\n}\n\n//Update AnswerdNum\nexport function UpdateAnswerdNum(AnswerdNum, gameKey) {\n  // console.log('UpdateAnswerNum', gameKey);\n\n  firebase\n    .firestore()\n    .collection('GameSession')\n    .doc(gameKey)\n    .update({\n      UsersAnswerd: AnswerdNum + 1,\n    })\n    .then(() => {\n      // console.log('Document successfully updated!');\n    })\n    .catch((error) => console.log('error', error));\n}\n\n//Update ActiveQuestion\nexport function UpdateActiveQuestion(activeQuestion, gameKey) {\n  //console.log('updateActiveQuestion', gameKey);\n  firebase\n    .firestore()\n    .collection('GameSession')\n    .doc(gameKey)\n    .update({\n      ActiveQuestion: activeQuestion + 1,\n    })\n    .then(() => {\n      //console.log('Document successfully updated!');\n    })\n    .catch((error) => console.log('error', error));\n}\n\n//SnapShop on HasANswerd\nexport function SnapshotHasAnswers(setIfAnswerd) {\n  // console.log('SnapShitHasAnswerd');\n\n  firebase\n    .firestore()\n    .collection('GameSession')\n    .doc('pilot1')\n    .onSnapshot((doc) => {\n      setIfAnswerd(doc.data().users);\n    });\n}\n\n// SnapShot on ActiveQuestion\nexport function SnapShotActiveQuestion(setActiveQuestion, gameKey) {\n  //console.log('SnapShotActibeQurstion', gameKey);\n\n  firebase\n    .firestore()\n    .collection('GameSession')\n    .doc(gameKey)\n    .onSnapshot((doc) => {\n      setActiveQuestion(doc.data().ActiveQuestion);\n      //console.log('här', doc.data().ActiveQuestion);\n    });\n}\n\n// Get all the Questions and answers\nexport function GetQuestionInfo(setQuestionArray, gameKey) {\n  //console.log('GetQuestionInfo', gameKey);\n  let ary = [];\n  firebase\n    .firestore()\n    .collection('GameSession')\n    .doc(gameKey)\n    .get()\n    .then((doc) => {\n      ary = [...doc.data().Questions];\n      for (let index = 0; index < ary.length; index++) {\n        ary[index].Answers.sort(() => Math.random() - 0.5);\n      }\n      //ary.sort(() => Math.random() - 0.5);\n      const size = 10;\n      const items = ary.slice(0, size);\n      setQuestionArray(items);\n    })\n    .catch((error) => console.log('error', error));\n}\n\n// SnapShot on the users and there information\nexport function SnapShotUsers(setUserArray, gameKey) {\n  //console.log('SnapShotUsers', gameKey);\n\n  firebase\n    .firestore()\n    .collection('GameSession')\n    .doc(gameKey)\n    .onSnapshot((doc) => {\n      setUserArray(doc.data().users);\n    });\n}\n\n// Update UserScore\nexport function UpdateUserScore(userEmail, gameKey) {\n  //console.log('UpdateUserScore !!!!!', userEmail);\n  let ary = [];\n  var userArrayRef = firebase\n    .firestore()\n    .collection('GameSession')\n    .doc(gameKey);\n\n  userArrayRef.get().then((doc) => {\n    ary = [...doc.data().users];\n    for (let index = 0; index < ary.length; index++) {\n      if (ary[index].userEmail === userEmail) {\n        ary[index].userScore += 1;\n        userArrayRef.update({\n          users: ary,\n        });\n      }\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}