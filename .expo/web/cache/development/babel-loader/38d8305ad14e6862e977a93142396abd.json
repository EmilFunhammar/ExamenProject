{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _jsxFileName = \"/Users/lanedator/Documents/GitHub/ExamenProject/src/navigation/authenticated_stack.js\",\n    _this2 = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ThemeContext } from \"../context/ThemeContext\";\nimport { EvilIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport HomePage from \"../screens/home\";\nimport CreatGameComponent from \"../screens/createGameScreen\";\nimport JoinGame from \"../screens/joinGameScreen\";\nimport Participants from \"../screens/participantScreen\";\nimport GameWinner from \"../screens/gameWinnerScreen\";\nimport GameBoard from \"../screens/gameScreen\";\nimport Settings from \"../screens/settings\";\nimport HighScore from \"../screens/highscoreScreen\";\nvar Stack = createStackNavigator();\nexport default function AuthenticatedStack() {\n  var _this = this;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"home\",\n    component: HomePage,\n    options: {\n      headerStyle: {\n        backgroundColor: theme.buttons\n      },\n      headerTintColor: theme.buttonsText,\n      headerTitle: function headerTitle() {\n        return React.createElement(CustomHeader, {\n          name: 'Vem kan minst?',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 30\n          }\n        });\n      },\n      headerLeft: function headerLeft() {\n        return React.createElement(ThemeComponent, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"CreateGame\",\n    component: CreatGameComponent,\n    options: {\n      headerStyle: {\n        backgroundColor: theme.buttons\n      },\n      headerTintColor: theme.buttonsText,\n      title: ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"JoinGame\",\n    component: JoinGame,\n    options: {\n      headerStyle: {\n        backgroundColor: theme.buttons\n      },\n      headerTintColor: theme.buttonsText,\n      title: ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"WinnerScreen\",\n    component: GameWinner,\n    options: {\n      headerStyle: {\n        backgroundColor: '#AFEFDF'\n      },\n      title: '',\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ParticipantScreen\",\n    component: Participants,\n    options: {\n      headerStyle: {\n        backgroundColor: '#AFEFDF'\n      },\n      title: '',\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"GameScreen\",\n    component: GameBoard,\n    options: {\n      title: '',\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Settings\",\n    component: Settings,\n    options: {\n      headerTitle: function headerTitle() {\n        return React.createElement(CustomHeader, {\n          name: 'Settings',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 30\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: theme.buttons\n      },\n      headerTintColor: theme.buttonsText\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"HighScore\",\n    component: HighScore,\n    options: {\n      headerRight: React.createElement(Button, {\n        onPress: function onPress() {\n          return alert('This is a button!');\n        },\n        title: \"Info\",\n        color: \"#fff\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }),\n      title: '',\n      headerShown: true,\n      headerStyle: {\n        backgroundColor: theme.buttons\n      },\n      headerTintColor: theme.buttonsText\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar CustomHeader = function CustomHeader(_ref) {\n  var name = _ref.name;\n\n  var _useContext2 = useContext(ThemeContext),\n      theme = _useContext2.theme;\n\n  return React.createElement(View, {\n    style: styles.header,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.headerText), {}, {\n      color: theme.buttonsText\n    }),\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, name)));\n};\n\nvar ThemeComponent = function ThemeComponent() {\n  var navigation = useNavigation();\n\n  var _useContext3 = useContext(ThemeContext),\n      theme = _useContext3.theme;\n\n  var color = \"\" + theme.buttonsText;\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Settings');\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.Theme,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, React.createElement(EvilIcons, {\n    name: \"gear\",\n    size: 32,\n    color: color,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  header: {\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  headerText: {\n    fontWeight: 'bold',\n    fontSize: 22,\n    letterSpacing: 1\n  },\n  Theme: {\n    marginLeft: 10\n  }\n});","map":{"version":3,"sources":["/Users/lanedator/Documents/GitHub/ExamenProject/src/navigation/authenticated_stack.js"],"names":["React","useContext","createStackNavigator","ThemeContext","EvilIcons","useNavigation","HomePage","CreatGameComponent","JoinGame","Participants","GameWinner","GameBoard","Settings","HighScore","Stack","AuthenticatedStack","theme","headerStyle","backgroundColor","buttons","headerTintColor","buttonsText","headerTitle","headerLeft","title","headerShown","headerRight","alert","CustomHeader","name","styles","header","headerText","color","ThemeComponent","navigation","navigate","Theme","StyleSheet","create","width","height","alignItems","justifyContent","flexDirection","fontWeight","fontSize","letterSpacing","marginLeft"],"mappings":"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","sourcesContent":["//REACT\nimport React, { useContext } from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native'\nimport { ThemeContext } from '../context/ThemeContext'\nimport { EvilIcons } from '@expo/vector-icons'\nimport { useNavigation } from '@react-navigation/native'\n\n//SCREENS\nimport HomePage from '../screens/home'\nimport CreatGameComponent from '../screens/createGameScreen'\nimport JoinGame from '../screens/joinGameScreen'\nimport Participants from '../screens/participantScreen'\nimport GameWinner from '../screens/gameWinnerScreen'\nimport GameBoard from '../screens/gameScreen'\nimport Settings from '../screens/settings'\nimport HighScore from '../screens/highscoreScreen'\n\nconst Stack = createStackNavigator()\n\nexport default function AuthenticatedStack() {\n  const { theme } = useContext(ThemeContext)\n\n  return (\n    <Stack.Navigator initialRouteName=\"home\">\n      <Stack.Screen\n        name=\"home\"\n        component={HomePage}\n        options={{\n          headerStyle: { backgroundColor: theme.buttons },\n          headerTintColor: theme.buttonsText,\n          headerTitle: () => <CustomHeader name={'Vem kan minst?'} />,\n          headerLeft: () => <ThemeComponent />,\n        }}\n      />\n      <Stack.Screen\n        name=\"CreateGame\"\n        component={CreatGameComponent}\n        options={{\n          headerStyle: { backgroundColor: theme.buttons },\n          headerTintColor: theme.buttonsText,\n          title: '',\n        }}\n      />\n      <Stack.Screen\n        name=\"JoinGame\"\n        component={JoinGame}\n        options={{\n          headerStyle: { backgroundColor: theme.buttons },\n          headerTintColor: theme.buttonsText,\n          title: '',\n        }}\n      />\n      <Stack.Screen\n        name=\"WinnerScreen\"\n        component={GameWinner}\n        options={{\n          headerStyle: { backgroundColor: '#AFEFDF' },\n          title: '',\n          headerShown: false,\n        }}\n      />\n      <Stack.Screen\n        name=\"ParticipantScreen\"\n        component={Participants}\n        options={{\n          headerStyle: { backgroundColor: '#AFEFDF' },\n          title: '',\n          headerShown: false,\n        }}\n      />\n      <Stack.Screen\n        name=\"GameScreen\"\n        component={GameBoard}\n        options={{ title: '', headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"Settings\"\n        component={Settings}\n        options={{\n          headerTitle: () => <CustomHeader name={'Settings'} />,\n          headerStyle: { backgroundColor: theme.buttons },\n          headerTintColor: theme.buttonsText,\n        }}\n      />\n      <Stack.Screen\n        name=\"HighScore\"\n        component={HighScore}\n        options={{\n          headerRight: (\n            <Button\n              onPress={() => alert('This is a button!')}\n              title=\"Info\"\n              color=\"#fff\"\n            />\n          ),\n          title: '',\n          headerShown: true,\n          headerStyle: { backgroundColor: theme.buttons },\n          headerTintColor: theme.buttonsText,\n        }}\n      />\n    </Stack.Navigator>\n  )\n}\n\nconst CustomHeader = ({ name }) => {\n  const { theme } = useContext(ThemeContext)\n\n  return (\n    <View style={styles.header}>\n      <View>\n        <Text style={{ ...styles.headerText, color: theme.buttonsText }}>\n          {name}\n        </Text>\n      </View>\n    </View>\n  )\n}\n\nconst ThemeComponent = () => {\n  const navigation = useNavigation()\n  const { theme } = useContext(ThemeContext)\n  let color = `${theme.buttonsText}`\n\n  return (\n    <TouchableOpacity onPress={() => navigation.navigate('Settings')}>\n      <View style={styles.Theme}>\n        <EvilIcons name=\"gear\" size={32} color={color} />\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  headerText: {\n    fontWeight: 'bold',\n    fontSize: 22,\n    letterSpacing: 1,\n  },\n  Theme: {\n    marginLeft: 10,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}