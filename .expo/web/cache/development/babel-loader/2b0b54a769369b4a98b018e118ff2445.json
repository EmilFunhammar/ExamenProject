{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/Users/oo/Desktop/APPutvekling/ExamenProject/screens/participantScreen.js\",\n    _this2 = this;\n\nimport { LinearGradient } from 'expo-linear-gradient';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport { GetQuestionInfo, SnapShotUsers } from \"../firebase/Firebase\";\nexport default function JoinGame(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var gameKey = route.params.gameKey;\n\n  var _useState = useState(['']),\n      _useState2 = _slicedToArray(_useState, 2),\n      userArray = _useState2[0],\n      setUserArray = _useState2[1];\n\n  var _useState3 = useState(['']),\n      _useState4 = _slicedToArray(_useState3, 2),\n      questionArray = _useState4[0],\n      setQuestionArray = _useState4[1];\n\n  var SnapShotObserver = function SnapShotObserver() {\n    SnapShotUsers(setUserArray, gameKey);\n  };\n\n  useEffect(function () {\n    SnapShotObserver();\n    GetQuestionInfo(setQuestionArray, gameKey);\n  }, []);\n  return React.createElement(LinearGradient, {\n    colors: ['#93F5EF', '#146B66', 'black'],\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.participantView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.participantTextHeader,\n    onPress: function onPress() {\n      console.log('häääääär', questionArray.length);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Participants\"), userArray.map(function (element, index) {\n    return React.createElement(ParticipantView, {\n      key: index,\n      element: element.userDisplayName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    });\n  })), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      navigation.navigate('GameScreen', {\n        questionArray: questionArray,\n        gameKey: gameKey\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Start Game\")));\n}\n\nvar ParticipantView = function ParticipantView(_ref2) {\n  var element = _ref2.element;\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: styles.participantText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, element), React.createElement(View, {\n    style: styles.underLineView,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#146B66'\n  },\n  button1: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%',\n    height: '10%',\n    backgroundColor: '#AFEFDF',\n    marginBottom: 100,\n    borderRadius: 20\n  },\n  buttonText: {\n    fontSize: 30,\n    fontWeight: '600'\n  },\n  underLineView: {\n    height: 3,\n    backgroundColor: 'black',\n    marginTop: 3,\n    width: '60%'\n  },\n  participantText: {\n    fontWeight: '500',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 15,\n    letterSpacing: 4,\n    fontSize: 22\n  },\n  participantTextHeader: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    marginBottom: 20\n  },\n  participantView: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 200\n  },\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#AFEFDF',\n    width: '80%',\n    height: '10%',\n    marginBottom: 100,\n    borderRadius: 20,\n    shadowColor: 'white',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 20\n  }\n});","map":{"version":3,"sources":["/Users/oo/Desktop/APPutvekling/ExamenProject/screens/participantScreen.js"],"names":["LinearGradient","React","useEffect","useState","useNavigation","GetQuestionInfo","SnapShotUsers","JoinGame","route","navigation","gameKey","params","userArray","setUserArray","questionArray","setQuestionArray","SnapShotObserver","styles","container","participantView","participantTextHeader","console","log","length","map","element","index","userDisplayName","button","navigate","buttonText","ParticipantView","participantText","underLineView","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","button1","width","height","marginBottom","borderRadius","fontSize","fontWeight","marginTop","letterSpacing","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"mappings":"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","sourcesContent":["import { LinearGradient } from 'expo-linear-gradient';\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { GetQuestionInfo, SnapShotUsers } from '../firebase/Firebase';\n\nexport default function JoinGame({ route }) {\n  const navigation = useNavigation();\n  const { gameKey } = route.params;\n  const [userArray, setUserArray] = useState(['']);\n  const [questionArray, setQuestionArray] = useState(['']);\n\n  const SnapShotObserver = () => {\n    SnapShotUsers(setUserArray, gameKey);\n  };\n  useEffect(() => {\n    SnapShotObserver();\n    GetQuestionInfo(setQuestionArray, gameKey);\n  }, []);\n\n  return (\n    <LinearGradient\n      colors={['#93F5EF', '#146B66', 'black']}\n      style={styles.container}\n    >\n      <View style={styles.participantView}>\n        <Text\n          style={styles.participantTextHeader}\n          onPress={() => {\n            /*   for (let index = 0; index < questionAnswersArray.length; index++) {\n              questionAnswersArray[index].Answers.sort(\n                () => Math.random() - 0.5\n              );\n            } */\n            //GetQuestionInfo(setQuestionArray, gameKey);\n            console.log('häääääär', questionArray.length);\n          }}\n        >\n          Participants\n        </Text>\n        {userArray.map((element, index) => (\n          <ParticipantView key={index} element={element.userDisplayName} />\n        ))}\n      </View>\n\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => {\n          navigation.navigate('GameScreen', {\n            questionArray: questionArray,\n            gameKey: gameKey,\n          });\n        }}\n      >\n        <Text style={styles.buttonText}>Start Game</Text>\n      </TouchableOpacity>\n    </LinearGradient>\n  );\n}\n\nconst ParticipantView = ({ element }) => {\n  return (\n    <>\n      <Text style={styles.participantText}>{element}</Text>\n      <View style={styles.underLineView} />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#146B66',\n  },\n  button1: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%',\n    height: '10%',\n    backgroundColor: '#AFEFDF',\n    marginBottom: 100,\n    borderRadius: 20,\n  },\n  buttonText: {\n    fontSize: 30,\n    fontWeight: '600',\n  },\n  underLineView: {\n    height: 3,\n    backgroundColor: 'black',\n    marginTop: 3,\n    width: '60%',\n  },\n  participantText: {\n    fontWeight: '500',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 15,\n    letterSpacing: 4,\n    fontSize: 22,\n  },\n  participantTextHeader: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    marginBottom: 20,\n  },\n  participantView: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 200,\n  },\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#AFEFDF',\n    width: '80%',\n    height: '10%',\n    marginBottom: 100,\n    borderRadius: 20,\n    shadowColor: 'white',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.5,\n    shadowRadius: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}