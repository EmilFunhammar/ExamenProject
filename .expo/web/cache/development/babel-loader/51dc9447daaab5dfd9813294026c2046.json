{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lanedator/Documents/GitHub/ExamenProject/screens/joinGameScreen.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AddUserToGame } from \"../firebase/Firebase\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { ThemeContext } from \"../context/ThemeContext\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useRef } from 'react';\nexport default function JoinGame() {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      key = _useState2[0],\n      setKey = _useState2[1];\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var _useContext2 = useContext(AuthContext),\n      user = _useContext2.user;\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ifDocExsists = _useState4[0],\n      setIfDocExsists = _useState4[1];\n\n  var num = useRef(0);\n\n  var navigate = function navigate() {\n    navigation.navigate('ParticipantScreen', {\n      gameKey: key\n    });\n  };\n\n  useEffect(function () {\n    if (num.current !== 0) {\n      if (ifDocExsists === true) {\n        navigate();\n      } else {\n        Alert.alert('wrong key');\n      }\n    }\n\n    num.current += 1;\n  }, [ifDocExsists]);\n  return React.createElement(LinearGradient, {\n    colors: theme.linearBackgroundColor,\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.textView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    onPress: function onPress() {\n      return console.log('emil', ifDocExsists);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Enter game key\"), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Enter key here:\",\n    onChangeText: function onChangeText(text) {\n      return setKey(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.underLineView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      AddUserToGame(user.displayName, user.email, key, setIfDocExsists);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Join game\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#146B66'\n  },\n  button: {\n    backgroundColor: '#AFEFDF',\n    width: '80%',\n    height: '15%',\n    marginBottom: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20\n  },\n  buttonText: {\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  text: {\n    fontSize: 22\n  },\n  textInput: {\n    marginTop: 40,\n    fontSize: 20\n  },\n  textView: {\n    marginTop: 100,\n    width: '80%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  underLineView: {\n    height: 2,\n    backgroundColor: 'black',\n    marginTop: 3,\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["/Users/lanedator/Documents/GitHub/ExamenProject/screens/joinGameScreen.js"],"names":["React","useContext","useState","useEffect","AddUserToGame","LinearGradient","ThemeContext","AuthContext","useNavigation","useRef","JoinGame","navigation","key","setKey","theme","user","ifDocExsists","setIfDocExsists","num","navigate","gameKey","current","Alert","alert","linearBackgroundColor","styles","container","textView","text","console","log","textInput","underLineView","button","displayName","email","buttonText","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","width","height","marginBottom","borderRadius","fontSize","fontWeight","marginTop"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;;;;;;;AASA,SAASC,aAAT;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,YAAT;AAEA,SAASC,WAAT;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,MAAT,QAAuB,OAAvB;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,MAAMC,UAAU,GAAGH,aAAa,EAAhC;;AADiC,kBAEXN,QAAQ,CAAC,EAAD,CAFG;AAAA;AAAA,MAE1BU,GAF0B;AAAA,MAErBC,MAFqB;;AAAA,oBAGfZ,UAAU,CAACK,YAAD,CAHK;AAAA,MAGzBQ,KAHyB,eAGzBA,KAHyB;;AAAA,qBAIhBb,UAAU,CAACM,WAAD,CAJM;AAAA,MAIzBQ,IAJyB,gBAIzBA,IAJyB;;AAAA,mBAKOb,QAAQ,EALf;AAAA;AAAA,MAK1Bc,YAL0B;AAAA,MAKZC,eALY;;AAMjC,MAAIC,GAAG,GAAGT,MAAM,CAAC,CAAD,CAAhB;;AAEA,MAAMU,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBR,IAAAA,UAAU,CAACQ,QAAX,CAAoB,mBAApB,EAAyC;AAAEC,MAAAA,OAAO,EAAER;AAAX,KAAzC;AACD,GAFD;;AAIAT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIe,GAAG,CAACG,OAAJ,KAAgB,CAApB,EAAuB;AACrB,UAAIL,YAAY,KAAK,IAArB,EAA2B;AACzBG,QAAAA,QAAQ;AACT,OAFD,MAEO;AACLG,QAAAA,KAAK,CAACC,KAAN,CAAY,WAAZ;AACD;AACF;;AACDL,IAAAA,GAAG,CAACG,OAAJ,IAAe,CAAf;AACD,GATQ,EASN,CAACL,YAAD,CATM,CAAT;AAWA,SACE,oBAAC,cAAD;AACE,IAAA,MAAM,EAAEF,KAAK,CAACU,qBADhB;AAEE,IAAA,KAAK,EAAEC,MAAM,CAACC,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEF,MAAM,CAACG,IADhB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBd,YAApB,CAAN;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAOE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAES,MAAM,CAACM,SADhB;AAEE,IAAA,WAAW,EAAC,iBAFd;AAGE,IAAA,YAAY,EAAE,sBAACH,IAAD;AAAA,aAAUf,MAAM,CAACe,IAAD,CAAhB;AAAA,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAYE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACO,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CAJF,EAkBE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEP,MAAM,CAACQ,MADhB;AAEE,IAAA,OAAO,EAAE,mBAAM;AACb7B,MAAAA,aAAa,CAACW,IAAI,CAACmB,WAAN,EAAmBnB,IAAI,CAACoB,KAAxB,EAA+BvB,GAA/B,EAAoCK,eAApC,CAAb;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACW,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,CAlBF,CADF;AA6BD;AAED,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,SAAS,EAAE;AACTa,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,eAHP;AAITC,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/BT,EAAAA,MAAM,EAAE;AACNS,IAAAA,eAAe,EAAE,SADX;AAENC,IAAAA,KAAK,EAAE,KAFD;AAGNC,IAAAA,MAAM,EAAE,KAHF;AAINC,IAAAA,YAAY,EAAE,EAJR;AAKNJ,IAAAA,cAAc,EAAE,QALV;AAMND,IAAAA,UAAU,EAAE,QANN;AAONM,IAAAA,YAAY,EAAE;AAPR,GAPuB;AAiB/BV,EAAAA,UAAU,EAAE;AACVW,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,UAAU,EAAE;AAFF,GAjBmB;AAqB/BpB,EAAAA,IAAI,EAAE;AACJmB,IAAAA,QAAQ,EAAE;AADN,GArByB;AAwB/BhB,EAAAA,SAAS,EAAE;AACTkB,IAAAA,SAAS,EAAE,EADF;AAETF,IAAAA,QAAQ,EAAE;AAFD,GAxBoB;AA4B/BpB,EAAAA,QAAQ,EAAE;AACRsB,IAAAA,SAAS,EAAE,GADH;AAERN,IAAAA,KAAK,EAAE,KAFC;AAGRF,IAAAA,cAAc,EAAE,QAHR;AAIRD,IAAAA,UAAU,EAAE;AAJJ,GA5BqB;AAkC/BR,EAAAA,aAAa,EAAE;AACbY,IAAAA,MAAM,EAAE,CADK;AAEbF,IAAAA,eAAe,EAAE,OAFJ;AAGbO,IAAAA,SAAS,EAAE,CAHE;AAIbN,IAAAA,KAAK,EAAE;AAJM;AAlCgB,CAAlB,CAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n  Alert,\n} from 'react-native';\nimport { AddUserToGame } from '../firebase/Firebase';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { ThemeContext } from '../context/ThemeContext';\n\nimport { AuthContext } from '../context/AuthContext';\nimport { useNavigation } from '@react-navigation/native';\n//import { useEffect } from 'react/cjs/react.development';\nimport { useRef } from 'react';\n\nexport default function JoinGame() {\n  const navigation = useNavigation();\n  const [key, setKey] = useState('');\n  const { theme } = useContext(ThemeContext);\n  const { user } = useContext(AuthContext);\n  const [ifDocExsists, setIfDocExsists] = useState();\n  let num = useRef(0);\n\n  const navigate = () => {\n    navigation.navigate('ParticipantScreen', { gameKey: key });\n  };\n\n  useEffect(() => {\n    if (num.current !== 0) {\n      if (ifDocExsists === true) {\n        navigate();\n      } else {\n        Alert.alert('wrong key');\n      }\n    }\n    num.current += 1;\n  }, [ifDocExsists]);\n\n  return (\n    <LinearGradient\n      colors={theme.linearBackgroundColor}\n      style={styles.container}\n    >\n      <View style={styles.textView}>\n        <Text\n          style={styles.text}\n          onPress={() => console.log('emil', ifDocExsists)}\n        >\n          Enter game key\n        </Text>\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"Enter key here:\"\n          onChangeText={(text) => setKey(text)}\n        />\n        <View style={styles.underLineView} />\n      </View>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => {\n          AddUserToGame(user.displayName, user.email, key, setIfDocExsists);\n        }}\n      >\n        <Text style={styles.buttonText}>Join game</Text>\n      </TouchableOpacity>\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#146B66',\n  },\n  button: {\n    backgroundColor: '#AFEFDF',\n    width: '80%',\n    height: '15%',\n    marginBottom: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20,\n  },\n\n  buttonText: {\n    fontSize: 30,\n    fontWeight: 'bold',\n  },\n  text: {\n    fontSize: 22,\n  },\n  textInput: {\n    marginTop: 40,\n    fontSize: 20,\n  },\n  textView: {\n    marginTop: 100,\n    width: '80%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  underLineView: {\n    height: 2,\n    backgroundColor: 'black',\n    marginTop: 3,\n    width: '100%',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}