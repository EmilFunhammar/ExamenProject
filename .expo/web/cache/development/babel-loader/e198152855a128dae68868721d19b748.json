{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/Users/lanedator/Documents/GitHub/ExamenProject/src/screens/gameScreen.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport { SnapShotUsers, SnapShotActiveQuestion, UpdateActiveQuestion, ResetAnswerdNum, SnapshotUserAnswerd, UpdateAnswerdNum, UpdateUserScore } from \"../firebase/Firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ThemeContext } from \"../context/ThemeContext\";\nimport { useNavigation } from '@react-navigation/native';\nLogBox.ignoreLogs(['Setting a timer']);\nexport default function GameBoard(_ref) {\n  var route = _ref.route;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var _useState = useState(['']),\n      _useState2 = _slicedToArray(_useState, 2),\n      usersArray = _useState2[0],\n      setUsersArray = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeQuestion = _useState4[0],\n      SetActiveQuestion = _useState4[1];\n\n  var _useState5 = useState(\"\" + theme.backgroundColor),\n      _useState6 = _slicedToArray(_useState5, 2),\n      backgroundColor = _useState6[0],\n      setBackgroundColor = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalVisiable = _useState8[0],\n      setModalVisable = _useState8[1];\n\n  var _route$params = route.params,\n      questionArray = _route$params.questionArray,\n      gameKey = _route$params.gameKey;\n  var navigation = useNavigation();\n  useEffect(function () {\n    SnapShotUsers(setUsersArray, gameKey);\n    SnapShotActiveQuestion(SetActiveQuestion, gameKey);\n  }, []);\n  useEffect(function () {\n    if (questionArray.length - 1 === activeQuestion) {\n      navigation.navigate('WinnerScreen', {\n        gameKey: gameKey\n      });\n    }\n  }, [activeQuestion, gameKey, navigation, questionArray.length]);\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      backgroundColor: backgroundColor\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.questionView), {}, {\n      backgroundColor: theme.buttons\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.questionText), {}, {\n      color: theme.questionTextColor\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, questionArray[activeQuestion].question, \" \", '?')), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisiable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.modal), {}, {\n      backgroundColor: theme.buttons\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 26,\n      fontWeight: '600'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"R\\xE4tt svar:\"), React.createElement(Text, {\n    style: {\n      fontSize: 26,\n      fontWeight: '600'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, questionArray[activeQuestion].rightAnswer))))), React.createElement(AnswerFeilds, {\n    questionArray: questionArray,\n    activeQuestion: activeQuestion,\n    setActiveQuestion: SetActiveQuestion,\n    setBackgroundColor: setBackgroundColor,\n    usersArray: usersArray,\n    gameKey: gameKey,\n    setModalVisable: setModalVisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar ScoreFeild = function ScoreFeild(_ref2) {\n  var userName = _ref2.userName,\n      userScore = _ref2.userScore;\n\n  var _useContext2 = useContext(ThemeContext),\n      theme = _useContext2.theme;\n\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.userNameAndScoreView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.userNameScoreText), {}, {\n      color: theme.color\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, userName), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.userScoreText), {}, {\n      color: theme.color\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, userScore)));\n};\n\nvar AnswerFeilds = function AnswerFeilds(_ref3) {\n  var questionArray = _ref3.questionArray,\n      activeQuestion = _ref3.activeQuestion,\n      setActiveQuestion = _ref3.setActiveQuestion,\n      setBackgroundColor = _ref3.setBackgroundColor,\n      usersArray = _ref3.usersArray,\n      gameKey = _ref3.gameKey,\n      setModalVisable = _ref3.setModalVisable;\n\n  var _useContext3 = useContext(ThemeContext),\n      theme = _useContext3.theme;\n\n  var _useContext4 = useContext(AuthContext),\n      user = _useContext4.user;\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      AnswerdNum = _useState10[0],\n      setAnswerdNum = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      disableButton = _useState12[0],\n      setDisableButton = _useState12[1];\n\n  var usersAnswer = questionArray[activeQuestion];\n  useEffect(function () {\n    SnapshotUserAnswerd(setAnswerdNum, gameKey);\n  }, [gameKey]);\n  useEffect(function () {\n    if (AnswerdNum === usersArray.length) {\n      ResetAnswerdNum(gameKey);\n      setModalVisable(true);\n      setTimeout(function () {\n        setDisableButton(false);\n        setBackgroundColor(theme.backgroundColor);\n        UpdateActiveQuestion(activeQuestion, gameKey);\n        setModalVisable(false);\n      }, 4000);\n    }\n  }, [AnswerdNum, activeQuestion, gameKey, setActiveQuestion, setBackgroundColor, setModalVisable, usersArray.length]);\n\n  var CheckAnswers = function CheckAnswers(value) {\n    setDisableButton(true);\n    var usersAnswerd = questionArray[activeQuestion].Answers[value];\n    var questionsRightAnswer = questionArray[activeQuestion].rightAnswer;\n\n    if (usersAnswerd === questionsRightAnswer) {\n      setBackgroundColor('green');\n      UpdateUserScore(user.email, gameKey);\n      UpdateAnswerdNum(AnswerdNum, gameKey);\n    } else {\n      setBackgroundColor('red');\n      UpdateAnswerdNum(AnswerdNum, gameKey);\n    }\n  };\n\n  return React.createElement(View, {\n    style: {\n      height: '50%',\n      width: '95%',\n      alignItems: 'center',\n      borderRadius: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 5\n    }\n  }, usersArray.map(function (element, index) {\n    return React.createElement(ScoreFeild, {\n      key: index,\n      userName: element.userDisplayName,\n      userScore: element.userScore,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    });\n  }), React.createElement(View, {\n    style: styles.answersView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.leftSide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    disabled: disableButton,\n    style: _objectSpread(_objectSpread({}, styles.answers), {}, {\n      backgroundColor: theme.buttons,\n      shadowColor: theme.shadowColor,\n      borderColor: theme.borderColor\n    }),\n    onPress: function onPress() {\n      CheckAnswers(0);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.answersText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  }, questionArray[activeQuestion].Answers[0]))), React.createElement(TouchableOpacity, {\n    disabled: disableButton,\n    style: _objectSpread(_objectSpread({}, styles.answers), {}, {\n      backgroundColor: theme.buttons,\n      shadowColor: theme.shadowColor,\n      borderColor: theme.borderColor\n    }),\n    onPress: function onPress() {\n      CheckAnswers(1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.answersText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, questionArray[activeQuestion].Answers[1])))), React.createElement(View, {\n    style: styles.rightSide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    disabled: disableButton,\n    style: _objectSpread(_objectSpread({}, styles.answers), {}, {\n      backgroundColor: theme.buttons,\n      shadowColor: theme.shadowColor,\n      borderColor: theme.borderColor\n    }),\n    onPress: function onPress() {\n      CheckAnswers(2);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.answersText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  }, questionArray[activeQuestion].Answers[2]))), React.createElement(TouchableOpacity, {\n    disabled: disableButton,\n    style: _objectSpread(_objectSpread({}, styles.answers), {}, {\n      backgroundColor: theme.buttons,\n      shadowColor: theme.shadowColor,\n      borderColor: theme.borderColor\n    }),\n    onPress: function onPress() {\n      CheckAnswers(3);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.answersText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  }, questionArray[activeQuestion].Answers[3]))))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    backgroundColor: '#146B66'\n  },\n  leftSide: {\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    width: '50%',\n    height: '100%'\n  },\n  rightSide: {\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    width: '50%',\n    height: '100%'\n  },\n  answersView: {\n    height: '85%',\n    width: '95%',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center'\n  },\n  answers: {\n    width: '90%',\n    height: '40%',\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderLeftWidth: 5,\n    borderBottomWidth: 10,\n    borderRightWidth: 3,\n    borderTopWidth: 3,\n    shadowOffset: {\n      width: 0,\n      height: 10\n    },\n    shadowOpacity: 0.4,\n    shadowRadius: 20,\n    marginBottom: 22\n  },\n  answersText: {\n    fontSize: 26,\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontWeight: '600',\n    margin: 10\n  },\n  questionView: {\n    height: '30%',\n    width: '95%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 20\n  },\n  questionText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 30,\n    fontWeight: '600',\n    width: '80%'\n  },\n  underLineView: {\n    height: 1,\n    backgroundColor: 'black',\n    width: '95%'\n  },\n  userNameScoreText: {\n    width: '70%',\n    justifyContent: 'center',\n    fontSize: 22,\n    marginLeft: 20,\n    fontWeight: '500'\n  },\n  userScoreText: {\n    width: '20%',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    fontSize: 22,\n    fontWeight: '500'\n  },\n  userNameAndScoreView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modal: {\n    position: 'absolute',\n    top: '40%',\n    width: '90%',\n    height: '30%',\n    backgroundColor: 'rgba(20, 107, 102, 0.9)',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 20\n  }\n});","map":{"version":3,"sources":["/Users/lanedator/Documents/GitHub/ExamenProject/src/screens/gameScreen.js"],"names":["React","useEffect","useState","useContext","LogBox","SnapShotUsers","SnapShotActiveQuestion","UpdateActiveQuestion","ResetAnswerdNum","SnapshotUserAnswerd","UpdateAnswerdNum","UpdateUserScore","AuthContext","ThemeContext","useNavigation","ignoreLogs","GameBoard","route","theme","usersArray","setUsersArray","activeQuestion","SetActiveQuestion","backgroundColor","setBackgroundColor","modalVisiable","setModalVisable","params","questionArray","gameKey","navigation","length","navigate","styles","container","questionView","buttons","questionText","color","questionTextColor","question","modal","width","justifyContent","alignItems","fontSize","fontWeight","rightAnswer","ScoreFeild","userName","userScore","flexDirection","marginTop","userNameAndScoreView","userNameScoreText","userScoreText","AnswerFeilds","setActiveQuestion","user","AnswerdNum","setAnswerdNum","disableButton","setDisableButton","usersAnswer","setTimeout","CheckAnswers","value","usersAnswerd","Answers","questionsRightAnswer","email","height","borderRadius","map","element","index","userDisplayName","answersView","leftSide","answers","shadowColor","borderColor","answersText","rightSide","StyleSheet","create","flex","borderLeftWidth","borderBottomWidth","borderRightWidth","borderTopWidth","shadowOffset","shadowOpacity","shadowRadius","marginBottom","margin","underLineView","marginLeft","position","top","alignSelf"],"mappings":"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","sourcesContent":["//REACT\nimport React, { useEffect, useState, useContext } from 'react'\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Modal,\n  LogBox,\n} from 'react-native'\n\n//FIREBASE\nimport {\n  SnapShotUsers,\n  SnapShotActiveQuestion,\n  UpdateActiveQuestion,\n  ResetAnswerdNum,\n  SnapshotUserAnswerd,\n  UpdateAnswerdNum,\n  UpdateUserScore,\n} from '../firebase/Firebase'\n\n// CONTEXTS\nimport { AuthContext } from '../context/AuthContext'\nimport { ThemeContext } from '../context/ThemeContext'\n\n//NAVIGATION\nimport { useNavigation } from '@react-navigation/native'\nLogBox.ignoreLogs(['Setting a timer'])\n\nexport default function GameBoard({ route }) {\n  const { theme } = useContext(ThemeContext)\n  const [usersArray, setUsersArray] = useState([''])\n  const [activeQuestion, SetActiveQuestion] = useState(0)\n  const [backgroundColor, setBackgroundColor] = useState(\n    `${theme.backgroundColor}`,\n  )\n  const [modalVisiable, setModalVisable] = useState(false)\n\n  const { questionArray, gameKey } = route.params\n  const navigation = useNavigation()\n\n  useEffect(() => {\n    SnapShotUsers(setUsersArray, gameKey)\n    SnapShotActiveQuestion(SetActiveQuestion, gameKey)\n  }, [])\n\n  useEffect(() => {\n    if (questionArray.length - 1 === activeQuestion) {\n      navigation.navigate('WinnerScreen', { gameKey: gameKey })\n    }\n  }, [activeQuestion, gameKey, navigation, questionArray.length])\n\n  return (\n    <View\n      style={{\n        ...styles.container,\n        backgroundColor: backgroundColor,\n      }}\n    >\n      <View style={{ ...styles.questionView, backgroundColor: theme.buttons }}>\n        <Text\n          style={{ ...styles.questionText, color: theme.questionTextColor }}\n        >\n          {questionArray[activeQuestion].question} {'?'}\n        </Text>\n      </View>\n\n      <View>\n        <Modal animationType=\"slide\" transparent={true} visible={modalVisiable}>\n          <View\n            style={{\n              ...styles.modal,\n              backgroundColor: theme.buttons,\n            }}\n          >\n            <View\n              style={{\n                width: '100%',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Text style={{ fontSize: 26, fontWeight: '600' }}>\n                Rätt svar:\n              </Text>\n              <Text style={{ fontSize: 26, fontWeight: '600' }}>\n                {questionArray[activeQuestion].rightAnswer}\n              </Text>\n            </View>\n          </View>\n        </Modal>\n      </View>\n      <AnswerFeilds\n        questionArray={questionArray}\n        activeQuestion={activeQuestion}\n        setActiveQuestion={SetActiveQuestion}\n        setBackgroundColor={setBackgroundColor}\n        usersArray={usersArray}\n        gameKey={gameKey}\n        setModalVisable={setModalVisable}\n      />\n    </View>\n  )\n}\n\n/* const ModalTextComponent = ({ element }) => {\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        marginBottom: 10,\n        justifyContent: 'center',\n        fontSize: 22,\n      }}\n    >\n      <Text\n        style={{\n          position: 'absolute',\n          left: '5%',\n          fontSize: 22,\n          fontWeight: '600',\n        }}\n      >\n        {element.userDisplayName}\n      </Text>\n      <Text\n        style={{\n          marginLeft: '20%',\n          fontSize: 22,\n          fontWeight: '600',\n        }}\n      >\n        {element.userAnswer}\n      </Text>\n    </View>\n  )\n} */\n\nconst ScoreFeild = ({ userName, userScore }) => {\n  const { theme } = useContext(ThemeContext)\n\n  return (\n    <View style={{ flexDirection: 'row', marginTop: 10 }}>\n      <View style={styles.userNameAndScoreView}>\n        <Text style={{ ...styles.userNameScoreText, color: theme.color }}>\n          {userName}\n        </Text>\n        <Text style={{ ...styles.userScoreText, color: theme.color }}>\n          {userScore}\n        </Text>\n      </View>\n    </View>\n  )\n}\n\nconst AnswerFeilds = ({\n  questionArray,\n  activeQuestion,\n  setActiveQuestion,\n  setBackgroundColor,\n  usersArray,\n  gameKey,\n  setModalVisable,\n}) => {\n  const { theme } = useContext(ThemeContext)\n  const { user } = useContext(AuthContext)\n  const [AnswerdNum, setAnswerdNum] = useState(0)\n  const [disableButton, setDisableButton] = useState(false)\n  let usersAnswer = questionArray[activeQuestion]\n\n  useEffect(() => {\n    SnapshotUserAnswerd(setAnswerdNum, gameKey)\n  }, [gameKey])\n\n  useEffect(() => {\n    // checks if it´s time for new question\n    if (AnswerdNum === usersArray.length) {\n      ResetAnswerdNum(gameKey)\n      setModalVisable(true)\n      setTimeout(function () {\n        setDisableButton(false)\n        setBackgroundColor(theme.backgroundColor)\n        UpdateActiveQuestion(activeQuestion, gameKey)\n        setModalVisable(false)\n      }, 4000)\n    }\n  }, [\n    AnswerdNum,\n    activeQuestion,\n    gameKey,\n    setActiveQuestion,\n    setBackgroundColor,\n    setModalVisable,\n    usersArray.length,\n  ])\n\n  const CheckAnswers = (value) => {\n    setDisableButton(true)\n    let usersAnswerd = questionArray[activeQuestion].Answers[value]\n    let questionsRightAnswer = questionArray[activeQuestion].rightAnswer\n\n    if (usersAnswerd === questionsRightAnswer) {\n      setBackgroundColor('green')\n      UpdateUserScore(user.email, gameKey)\n      UpdateAnswerdNum(AnswerdNum, gameKey)\n    } else {\n      setBackgroundColor('red')\n      UpdateAnswerdNum(AnswerdNum, gameKey)\n    }\n  }\n\n  return (\n    <View\n      style={{\n        height: '50%',\n        width: '95%',\n        alignItems: 'center',\n        borderRadius: 20,\n      }}\n    >\n      {usersArray.map((element, index) => (\n        <ScoreFeild\n          key={index}\n          userName={element.userDisplayName}\n          userScore={element.userScore}\n        />\n      ))}\n\n      <View style={styles.answersView}>\n        <View style={styles.leftSide}>\n          <TouchableOpacity\n            // disable answer fields\n            disabled={disableButton}\n            style={{\n              ...styles.answers,\n              backgroundColor: theme.buttons,\n              shadowColor: theme.shadowColor,\n              borderColor: theme.borderColor,\n            }}\n            onPress={() => {\n              CheckAnswers(0)\n            }}\n          >\n            <View>\n              <Text style={styles.answersText}>\n                {questionArray[activeQuestion].Answers[0]}\n              </Text>\n            </View>\n          </TouchableOpacity>\n          <TouchableOpacity\n            disabled={disableButton}\n            style={{\n              ...styles.answers,\n              backgroundColor: theme.buttons,\n              shadowColor: theme.shadowColor,\n              borderColor: theme.borderColor,\n            }}\n            onPress={() => {\n              CheckAnswers(1)\n            }}\n          >\n            <View>\n              <Text style={styles.answersText}>\n                {questionArray[activeQuestion].Answers[1]}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.rightSide}>\n          <TouchableOpacity\n            disabled={disableButton}\n            style={{\n              ...styles.answers,\n              backgroundColor: theme.buttons,\n              shadowColor: theme.shadowColor,\n              borderColor: theme.borderColor,\n            }}\n            onPress={() => {\n              CheckAnswers(2)\n            }}\n          >\n            <View>\n              <Text style={styles.answersText}>\n                {questionArray[activeQuestion].Answers[2]}\n              </Text>\n            </View>\n          </TouchableOpacity>\n          <TouchableOpacity\n            disabled={disableButton}\n            style={{\n              ...styles.answers,\n              backgroundColor: theme.buttons,\n              shadowColor: theme.shadowColor,\n              borderColor: theme.borderColor,\n            }}\n            onPress={() => {\n              CheckAnswers(3)\n            }}\n          >\n            <View>\n              <Text style={styles.answersText}>\n                {questionArray[activeQuestion].Answers[3]}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    backgroundColor: '#146B66',\n  },\n  leftSide: {\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    width: '50%',\n    height: '100%',\n  },\n  rightSide: {\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    width: '50%',\n    height: '100%',\n  },\n  answersView: {\n    height: '85%',\n    width: '95%',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n  },\n  answers: {\n    width: '90%',\n    height: '40%',\n\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n\n    borderLeftWidth: 5,\n    borderBottomWidth: 10,\n    borderRightWidth: 3,\n    borderTopWidth: 3,\n\n    shadowOffset: { width: 0, height: 10 },\n    shadowOpacity: 0.4,\n    shadowRadius: 20,\n    marginBottom: 22,\n  },\n  answersText: {\n    fontSize: 26,\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontWeight: '600',\n    margin: 10,\n  },\n  questionView: {\n    height: '30%',\n    width: '95%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 20,\n  },\n  questionText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 30,\n    fontWeight: '600',\n    width: '80%',\n  },\n  underLineView: {\n    height: 1,\n    backgroundColor: 'black',\n    width: '95%',\n  },\n  userNameScoreText: {\n    width: '70%',\n    justifyContent: 'center',\n    fontSize: 22,\n    marginLeft: 20,\n    fontWeight: '500',\n  },\n  userScoreText: {\n    width: '20%',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    fontSize: 22,\n    fontWeight: '500',\n  },\n  userNameAndScoreView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modal: {\n    position: 'absolute',\n    top: '40%',\n    width: '90%',\n    height: '30%',\n    backgroundColor: 'rgba(20, 107, 102, 0.9)',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 20,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}