{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/oo/Desktop/APPutvekling/ExamenProject/screens/createGameScreen.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { GetGameQuestions, CreateGameSetup } from \"../firebase/Firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useNavigation } from '@react-navigation/native';\nexport default function CreateGameComponent() {\n  var navigation = useNavigation();\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      key = _useState2[0],\n      setKey = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gameQuestions = _useState4[0],\n      setGameQuestions = _useState4[1];\n\n  useEffect(function () {\n    GetGameQuestions(setGameQuestions);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.textView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    onPress: function onPress() {\n      gameQuestions.sort(function () {\n        return Math.random() - 0.5;\n      });\n      console.log('q', gameQuestions);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Enter game key\"), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Enter key here:\",\n    onChangeText: function onChangeText(text) {\n      return setKey(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.underLineView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      CreateGameSetup(gameQuestions, key, user);\n      navigation.navigate('ParticipantScreen', {\n        gameKey: key\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Go to lobby\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#146B66'\n  },\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%',\n    height: '10%',\n    backgroundColor: '#AFEFDF',\n    marginBottom: 100,\n    borderRadius: 20\n  },\n  buttonText: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  text: {\n    fontSize: 22\n  },\n  textInput: {\n    marginTop: 40,\n    fontSize: 20\n  },\n  textView: {\n    marginTop: 100,\n    width: '80%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  underLineView: {\n    height: 2,\n    backgroundColor: 'black',\n    marginTop: 3,\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["/Users/oo/Desktop/APPutvekling/ExamenProject/screens/createGameScreen.js"],"names":["React","useContext","useState","useEffect","GetGameQuestions","CreateGameSetup","AuthContext","useNavigation","CreateGameComponent","navigation","user","key","setKey","gameQuestions","setGameQuestions","styles","container","textView","text","sort","Math","random","console","log","textInput","underLineView","button","navigate","gameKey","buttonText","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","width","height","marginBottom","borderRadius","fontSize","fontWeight","marginTop"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n} from 'react-native';\nimport {\n  GetGameQuestions,\n  CreateGameSetup,\n} from '../firebase/Firebase';\nimport { AuthContext } from '../context/AuthContext';\nimport { useNavigation } from '@react-navigation/native';\n\nexport default function CreateGameComponent() {\n  const navigation = useNavigation();\n  const { user } = useContext(AuthContext);\n  const [key, setKey] = useState('');\n  const [gameQuestions, setGameQuestions] = useState();\n\n  useEffect(() => {\n    GetGameQuestions(setGameQuestions);\n  }, []);\n  return (\n    <View style={styles.container}>\n      <View style={styles.textView}>\n        <Text\n          style={styles.text}\n          onPress={() => {\n            gameQuestions.sort(() => Math.random() - 0.5);\n\n            console.log('q', gameQuestions);\n          }}\n        >\n          Enter game key\n        </Text>\n\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"Enter key here:\"\n          onChangeText={(text) => setKey(text)}\n        />\n        <View style={styles.underLineView} />\n      </View>\n      <View style={styles.button}>\n        <TouchableOpacity\n          onPress={() => {\n            CreateGameSetup(gameQuestions, key, user);\n            navigation.navigate('ParticipantScreen', { gameKey: key });\n          }}\n        >\n          <Text style={styles.buttonText}>Go to lobby</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#146B66',\n  },\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%',\n    height: '10%',\n    backgroundColor: '#AFEFDF',\n    marginBottom: 100,\n    borderRadius: 20,\n  },\n  buttonText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  text: {\n    fontSize: 22,\n  },\n  textInput: {\n    marginTop: 40,\n    fontSize: 20,\n  },\n  textView: {\n    marginTop: 100,\n    width: '80%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  underLineView: {\n    height: 2,\n    backgroundColor: 'black',\n    marginTop: 3,\n    width: '100%',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}