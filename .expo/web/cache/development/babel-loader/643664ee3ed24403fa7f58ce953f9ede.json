{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/Users/lanedator/Documents/GitHub/ExamenProject/src/screens/gameWinnerScreen.js\",\n    _this2 = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport { useEffect, useState } from 'react/cjs/react.development';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ThemeContext } from \"../context/ThemeContext\";\nimport { GetUsers, saveGameWinner } from \"../firebase/Firebase\";\nimport { useNavigation } from '@react-navigation/native';\nexport default function GameWinner(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var gameKey = route.params.gameKey;\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  var _useContext2 = useContext(ThemeContext),\n      theme = _useContext2.theme;\n\n  var _useState = useState(['']),\n      _useState2 = _slicedToArray(_useState, 2),\n      userAry = _useState2[0],\n      setUserAry = _useState2[1];\n\n  var winnerAry = [];\n\n  var SortOutWinner = function SortOutWinner() {\n    var ary = [];\n    var highScoreName = userAry[0].userDisplayName;\n    userAry.sort(function (a, b) {\n      return b.userScore - a.userScore;\n    });\n    var obj = {\n      userName: highScoreName,\n      userScore: userAry[0].userScore\n    };\n    ary.push(obj);\n\n    if (userAry.length != 1) {\n      console.log(userAry.length);\n\n      for (var i = 0; i < userAry.length - 1; i++) {\n        var y = i + 1;\n\n        if (userAry[i].userScore === userAry[y].userScore) {\n          var _obj = {\n            userName: userAry[y].userDisplayName,\n            userScore: userAry[y].userScore\n          };\n          ary.push(_obj);\n        }\n      }\n    }\n\n    winnerAry = [].concat(ary);\n    return ary.map(function (element, index) {\n      return React.createElement(WinnerComponent, {\n        userDisplayName: element.userName,\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      });\n    });\n  };\n\n  useEffect(function () {\n    GetUsers(setUserAry, gameKey);\n  }, []);\n  return React.createElement(LinearGradient, {\n    colors: theme.linearBackgroundColor,\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      backgroundColor: theme.backgroundColor\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      height: '30%',\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.QuestionMaserView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.QuestionMaserText), {}, {\n      color: theme.color\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Vinnare!\"), SortOutWinner())), React.createElement(View, {\n    style: {\n      width: '100%',\n      height: '40%',\n      marginTop: 50,\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: theme.color,\n      height: 3,\n      width: '90%',\n      marginLeft: '5%',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 32,\n      marginLeft: '15%',\n      fontWeight: 'bold',\n      color: theme.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Namn\"), React.createElement(Text, {\n    style: {\n      fontSize: 32,\n      marginRight: '17%',\n      fontWeight: 'bold',\n      color: theme.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Po\\xE4ng\")), userAry.map(function (element, index) {\n    return React.createElement(ScoreComponent, {\n      userScore: element.userScore,\n      userName: element.userDisplayName,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    });\n  }), React.createElement(ScoreComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: {\n      height: '15%',\n      width: '80%',\n      marginBottom: '10%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      borderRadius: 10,\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100%',\n      width: '100%',\n      backgroundColor: theme.buttons\n    },\n    onPress: function onPress() {\n      for (var i = 0; i < userAry.length; i++) {\n        if (userAry[i].host != null && userAry[i].userEmail === user.email) {\n          saveGameWinner(winnerAry);\n        }\n      }\n\n      navigation.navigate('home');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      fontSize: 32,\n      color: theme.buttonsText\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, \"Quit Game\"))));\n}\n\nvar WinnerComponent = function WinnerComponent(_ref2) {\n  var userDisplayName = _ref2.userDisplayName;\n\n  var _useContext3 = useContext(ThemeContext),\n      theme = _useContext3.theme;\n\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'column',\n      width: '100%',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 32,\n      fontWeight: '500',\n      color: theme.color\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, userDisplayName));\n};\n\nvar ScoreComponent = function ScoreComponent(_ref3) {\n  var userScore = _ref3.userScore,\n      userName = _ref3.userName;\n\n  var _useContext4 = useContext(ThemeContext),\n      theme = _useContext4.theme;\n\n  return React.createElement(View, {\n    style: styles.UserTableView,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.UserTableText), {}, {\n      marginLeft: '15%',\n      fontWeight: '500',\n      color: theme.color\n    }),\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, userName), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.UserTableText), {}, {\n      marginRight: '25%',\n      fontWeight: '500',\n      color: theme.color\n    }),\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }, userScore));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#146B66',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  titleView: {\n    justifyContent: 'center',\n    width: '100%',\n    alignItems: 'center'\n  },\n  QuestionMaserView: {\n    justifyContent: 'center',\n    width: '100%',\n    alignItems: 'center',\n    height: '100%',\n    marginTop: 30\n  },\n  UserTableView: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  titleText: {\n    fontSize: 22\n  },\n  QuestionMaserText: {\n    fontSize: 45,\n    fontWeight: 'bold'\n  },\n  QuestionMaserUserNameText: {\n    fontSize: 45,\n    marginTop: 20,\n    fontWeight: '500'\n  },\n  UserTableText: {\n    fontSize: 26,\n    marginTop: 15\n  },\n  button: {\n    backgroundColor: '#AFEFDF',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 25,\n    marginRight: 25,\n    borderRadius: 10,\n    height: '80%'\n  }\n});","map":{"version":3,"sources":["/Users/lanedator/Documents/GitHub/ExamenProject/src/screens/gameWinnerScreen.js"],"names":["React","useContext","ScrollView","TouchableOpacity","useEffect","useState","LinearGradient","AuthContext","ThemeContext","GetUsers","saveGameWinner","useNavigation","GameWinner","route","navigation","gameKey","params","user","theme","userAry","setUserAry","winnerAry","SortOutWinner","ary","highScoreName","userDisplayName","sort","a","b","userScore","obj","userName","push","length","console","log","i","y","map","element","index","linearBackgroundColor","styles","container","backgroundColor","width","height","justifyContent","QuestionMaserView","QuestionMaserText","color","marginTop","marginLeft","alignItems","flexDirection","fontSize","fontWeight","marginRight","marginBottom","borderRadius","buttons","host","userEmail","email","navigate","buttonsText","WinnerComponent","ScoreComponent","UserTableView","UserTableText","StyleSheet","create","flex","titleView","titleText","QuestionMaserUserNameText","button"],"mappings":"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","sourcesContent":["//REACT\nimport React, { useContext } from 'react'\nimport { SafeAreaView, StyleSheet, Text, View } from 'react-native'\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler'\nimport { useEffect, useState } from 'react/cjs/react.development'\nimport { LinearGradient } from 'expo-linear-gradient'\n\n//CONTEXT\nimport { AuthContext } from '../context/AuthContext'\nimport { ThemeContext } from '../context/ThemeContext'\n\n//FIREBASE\nimport { GetUsers, saveGameWinner } from '../firebase/Firebase'\n\n//NAVIGATION\nimport { useNavigation } from '@react-navigation/native'\n\nexport default function GameWinner({ route }) {\n  const navigation = useNavigation()\n  const { gameKey } = route.params\n  const { user } = useContext(AuthContext)\n  const { theme } = useContext(ThemeContext)\n  const [userAry, setUserAry] = useState([''])\n  let winnerAry = []\n\n  const SortOutWinner = () => {\n    let ary = []\n\n    let highScoreName = userAry[0].userDisplayName\n    userAry.sort((a, b) => b.userScore - a.userScore)\n    let obj = {\n      userName: highScoreName,\n      userScore: userAry[0].userScore,\n    }\n\n    ary.push(obj)\n    if (userAry.length != 1) {\n      console.log(userAry.length)\n      for (let i = 0; i < userAry.length - 1; i++) {\n        let y = i + 1\n        if (userAry[i].userScore === userAry[y].userScore) {\n          let obj = {\n            userName: userAry[y].userDisplayName,\n            userScore: userAry[y].userScore,\n          }\n          ary.push(obj)\n        }\n      }\n    }\n\n    winnerAry = [...ary]\n    return ary.map((element, index) => (\n      <WinnerComponent userDisplayName={element.userName} key={index} />\n    ))\n  }\n\n  useEffect(() => {\n    GetUsers(setUserAry, gameKey)\n  }, [])\n  return (\n    <LinearGradient\n      colors={theme.linearBackgroundColor}\n      style={{\n        ...styles.container,\n        backgroundColor: theme.backgroundColor,\n      }}\n    >\n      <View\n        style={{\n          width: '100%',\n          height: '30%',\n          justifyContent: 'flex-start',\n        }}\n      >\n        <View style={styles.QuestionMaserView}>\n          <Text style={{ ...styles.QuestionMaserText, color: theme.color }}>\n            Vinnare!\n          </Text>\n          {SortOutWinner()}\n        </View>\n      </View>\n\n      <View\n        style={{\n          width: '100%',\n          height: '40%',\n          marginTop: 50,\n          justifyContent: 'flex-start',\n        }}\n      >\n        <View\n          style={{\n            backgroundColor: theme.color,\n            height: 3,\n            width: '90%',\n            marginLeft: '5%',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        ></View>\n        <ScrollView>\n          <View\n            style={{\n              flexDirection: 'row',\n              width: '100%',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 32,\n                marginLeft: '15%',\n                fontWeight: 'bold',\n                color: theme.color,\n              }}\n            >\n              Namn\n            </Text>\n            <Text\n              style={{\n                fontSize: 32,\n                marginRight: '17%',\n                fontWeight: 'bold',\n                color: theme.color,\n              }}\n            >\n              Poäng\n            </Text>\n          </View>\n\n          {userAry.map((element, index) => (\n            <ScoreComponent\n              userScore={element.userScore}\n              userName={element.userDisplayName}\n              key={index}\n            />\n          ))}\n          <ScoreComponent />\n        </ScrollView>\n      </View>\n      <View\n        style={{\n          height: '15%',\n          width: '80%',\n          marginBottom: '10%',\n        }}\n      >\n        <TouchableOpacity\n          style={{\n            borderRadius: 10,\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '100%',\n            width: '100%',\n            backgroundColor: theme.buttons,\n          }}\n          onPress={() => {\n            // Checks if user are host and upload the winner to highscore\n            for (let i = 0; i < userAry.length; i++) {\n              if (\n                userAry[i].host != null &&\n                userAry[i].userEmail === user.email\n              ) {\n                saveGameWinner(winnerAry)\n              }\n            }\n            navigation.navigate('home')\n          }}\n        >\n          <Text\n            style={{\n              fontWeight: 'bold',\n              fontSize: 32,\n              color: theme.buttonsText,\n            }}\n          >\n            Quit Game\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </LinearGradient>\n  )\n}\n\nconst WinnerComponent = ({ userDisplayName }) => {\n  const { theme } = useContext(ThemeContext)\n\n  return (\n    <View\n      style={{\n        flexDirection: 'column',\n        width: '100%',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}\n    >\n      <Text\n        style={{\n          fontSize: 32,\n          fontWeight: '500',\n          color: theme.color,\n        }}\n      >\n        {userDisplayName}\n      </Text>\n    </View>\n  )\n}\n\nconst ScoreComponent = ({ userScore, userName }) => {\n  const { theme } = useContext(ThemeContext)\n\n  return (\n    <View style={styles.UserTableView}>\n      <Text\n        style={{\n          ...styles.UserTableText,\n          marginLeft: '15%',\n          fontWeight: '500',\n          color: theme.color,\n        }}\n      >\n        {userName}\n      </Text>\n      <Text\n        style={{\n          ...styles.UserTableText,\n          marginRight: '25%',\n          fontWeight: '500',\n          color: theme.color,\n        }}\n      >\n        {userScore}\n      </Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#146B66',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  titleView: {\n    justifyContent: 'center',\n    width: '100%',\n    alignItems: 'center',\n  },\n  QuestionMaserView: {\n    justifyContent: 'center',\n    width: '100%',\n    alignItems: 'center',\n    height: '100%',\n    marginTop: 30,\n  },\n  UserTableView: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  titleText: {\n    fontSize: 22,\n  },\n  QuestionMaserText: {\n    fontSize: 45,\n    fontWeight: 'bold',\n  },\n  QuestionMaserUserNameText: {\n    fontSize: 45,\n    marginTop: 20,\n    fontWeight: '500',\n  },\n  UserTableText: {\n    fontSize: 26,\n    marginTop: 15,\n  },\n  button: {\n    backgroundColor: '#AFEFDF',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 25,\n    marginRight: 25,\n    borderRadius: 10,\n    height: '80%',\n  },\n})\n"]},"metadata":{},"sourceType":"module"}