{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/lanedator/Documents/GitHub/ExamenProject/screens/home.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useState, useContext } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { GetUsers, SnapShotUsers } from \"../firebase/Firebase\";\nimport { ThemeContext } from \"../context/ThemeContext\";\nimport { schemes } from \"../resources/colorSchemes\";\nexport default function HomePage() {\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme,\n      toggleTheme = _useContext.toggleTheme;\n\n  var navigation = useNavigation();\n  return React.createElement(LinearGradient, {\n    colors: theme.linearBackgroundColor,\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      backgroundColor: theme.backgroundColor\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '55%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: _objectSpread(_objectSpread({}, styles.touchableOpacity), {}, {\n      backgroundColor: theme.buttons\n    }),\n    onPress: function onPress() {\n      return console.log('emil');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.buttonsText), {}, {\n      color: theme.buttonsText\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Highscore\"))), React.createElement(TouchableOpacity, {\n    style: _objectSpread(_objectSpread({}, styles.touchableOpacity), {}, {\n      backgroundColor: theme.buttons\n    }),\n    onPress: function onPress() {\n      return navigation.navigate('CreateGame');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.buttonsText), {}, {\n      color: theme.buttonsText\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Create game\"))), React.createElement(TouchableOpacity, {\n    style: _objectSpread(_objectSpread({}, styles.touchableOpacity), {}, {\n      backgroundColor: theme.buttons\n    }),\n    onPress: function onPress() {\n      return navigation.navigate('JoinGame');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.buttonsText), {}, {\n      color: theme.buttonsText\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Join game\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#146B66',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonsText: {\n    fontSize: 35,\n    fontWeight: '800'\n  },\n  touchableOpacity: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#AFEFDF',\n    width: '80%',\n    height: '25%',\n    borderRadius: 20,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 20\n  }\n});","map":{"version":3,"sources":["/Users/lanedator/Documents/GitHub/ExamenProject/screens/home.js"],"names":["React","LinearGradient","useState","useContext","useNavigation","GetUsers","SnapShotUsers","ThemeContext","schemes","HomePage","theme","toggleTheme","navigation","linearBackgroundColor","styles","container","backgroundColor","height","width","alignItems","justifyContent","touchableOpacity","buttons","console","log","buttonsText","color","navigate","StyleSheet","create","flex","fontSize","fontWeight","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nimport { useState, useContext } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { GetUsers, SnapShotUsers } from '../firebase/Firebase';\nimport { ThemeContext } from '../context/ThemeContext';\nimport { schemes } from '../resources/colorSchemes';\n\nexport default function HomePage() {\n  const { theme, toggleTheme } = useContext(ThemeContext);\n\n  const navigation = useNavigation();\n\n  return (\n    <LinearGradient\n      colors={theme.linearBackgroundColor}\n      style={{ ...styles.container, backgroundColor: theme.backgroundColor }}\n    >\n      {/*  <View\n        style={{\n          ...styles.container,\n          backgroundColor: theme.linearBackgroundColor,\n        }}\n      > */}\n      <View\n        // eslint-disable-next-line react-native/no-inline-styles\n        style={{\n          height: '55%',\n          width: '100%',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <TouchableOpacity\n          style={{\n            ...styles.touchableOpacity,\n            backgroundColor: theme.buttons,\n          }}\n          onPress={() => console.log('emil')}\n        >\n          <View style={styles.buttons}>\n            <Text style={{ ...styles.buttonsText, color: theme.buttonsText }}>\n              Highscore\n            </Text>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={{\n            ...styles.touchableOpacity,\n            backgroundColor: theme.buttons,\n          }}\n          onPress={() => navigation.navigate('CreateGame')}\n        >\n          <View>\n            <Text style={{ ...styles.buttonsText, color: theme.buttonsText }}>\n              Create game\n            </Text>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={{\n            ...styles.touchableOpacity,\n            backgroundColor: theme.buttons,\n          }}\n          onPress={() => navigation.navigate('JoinGame')}\n        >\n          <View style={styles.buttons}>\n            <Text style={{ ...styles.buttonsText, color: theme.buttonsText }}>\n              Join game\n            </Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#146B66',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  buttonsText: {\n    fontSize: 35,\n    fontWeight: '800',\n  },\n  touchableOpacity: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#AFEFDF',\n    width: '80%',\n    height: '25%',\n    borderRadius: 20,\n    shadowColor: 'black',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.5,\n    shadowRadius: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}