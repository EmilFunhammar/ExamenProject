{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/lanedator/Documents/GitHub/ExamenProject/screens/settings.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport { schemes } from \"../resources/colorSchemes\";\nimport { ThemeContext } from \"../context/ThemeContext\";\nimport { AuthContext } from \"../context/AuthContext\";\nexport default function Settings() {\n  var _useContext = useContext(AuthContext),\n      signOutUser = _useContext.signOutUser;\n\n  var _useContext2 = useContext(ThemeContext),\n      theme = _useContext2.theme,\n      toggleTheme = _useContext2.toggleTheme;\n\n  var navigation = useNavigation();\n\n  var changeTheme = function changeTheme(value) {\n    if (value === 'dark mode') {\n      toggleTheme(schemes.Dark);\n    } else if (value === 'defualt mode') {\n      toggleTheme(schemes.Def);\n    } else if (value === 'Easy read mode') {\n      toggleTheme(schemes.EasyReadColor);\n    }\n  };\n\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      backgroundColor: theme.backgroundColor\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '80%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '80%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: _objectSpread(_objectSpread({}, styles.thmesbuttons), {}, {\n      backgroundColor: theme.buttons\n    }),\n    onPress: function onPress() {\n      changeTheme('dark mode');\n      navigation.navigate('home');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.themeText), {}, {\n      color: theme.buttonsText\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Dark mode\"))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      changeTheme('defualt mode');\n      navigation.navigate('home');\n    },\n    style: _objectSpread(_objectSpread({}, styles.thmesbuttons), {}, {\n      backgroundColor: theme.buttons\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.themeText), {}, {\n      color: theme.buttonsText\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"Defualt mode\"))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      changeTheme('Easy read mode');\n      navigation.navigate('home');\n    },\n    style: _objectSpread(_objectSpread({}, styles.thmesbuttons), {}, {\n      backgroundColor: theme.buttons\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.themeText), {}, {\n      color: theme.buttonsText\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Easy read mode\")))), React.createElement(View, {\n    style: {\n      width: '80%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      signOutUser();\n    },\n    style: _objectSpread(_objectSpread({}, styles.signOut), {}, {\n      backgroundColor: theme.buttons\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.themeText), {}, {\n      color: theme.buttonsText\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"Sign out\"))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#146B66',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  thmesbuttons: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#AFEFDF',\n    height: 60,\n    width: '100%',\n    marginTop: 10,\n    borderRadius: 10\n  },\n  themeText: {\n    fontSize: 22,\n    fontWeight: '600'\n  },\n  signOut: {\n    marginBottom: 50,\n    width: '100%',\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["/Users/lanedator/Documents/GitHub/ExamenProject/screens/settings.js"],"names":["React","useContext","useNavigation","schemes","ThemeContext","AuthContext","Settings","signOutUser","theme","toggleTheme","navigation","changeTheme","value","Dark","Def","EasyReadColor","styles","container","backgroundColor","height","width","alignItems","justifyContent","thmesbuttons","buttons","navigate","themeText","color","buttonsText","signOut","StyleSheet","create","flex","marginTop","borderRadius","fontSize","fontWeight","marginBottom"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\n// RESOURSES\nimport { schemes } from '../resources/colorSchemes';\n\n// CONTEXT:S\nimport { ThemeContext } from '../context/ThemeContext';\nimport { AuthContext } from '../context/AuthContext';\n\nexport default function Settings() {\n  const { signOutUser } = useContext(AuthContext);\n  const { theme, toggleTheme } = useContext(ThemeContext);\n  const navigation = useNavigation();\n\n  const changeTheme = (value) => {\n    if (value === 'dark mode') {\n      toggleTheme(schemes.Dark);\n    } else if (value === 'defualt mode') {\n      toggleTheme(schemes.Def);\n    } else if (value === 'Easy read mode') {\n      toggleTheme(schemes.EasyReadColor);\n    }\n  };\n\n  return (\n    <View\n      style={{ ...styles.container, backgroundColor: theme.backgroundColor }}\n    >\n      <View\n        style={{\n          height: '80%',\n          width: '100%',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <View\n          // eslint-disable-next-line react-native/no-inline-styles\n          style={{\n            width: '80%',\n          }}\n        >\n          <TouchableOpacity\n            style={{ ...styles.thmesbuttons, backgroundColor: theme.buttons }}\n            onPress={() => {\n              changeTheme('dark mode');\n              navigation.navigate('home');\n            }}\n          >\n            <View>\n              <Text style={{ ...styles.themeText, color: theme.buttonsText }}>\n                Dark mode\n              </Text>\n            </View>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {\n              changeTheme('defualt mode');\n              navigation.navigate('home');\n            }}\n            style={{ ...styles.thmesbuttons, backgroundColor: theme.buttons }}\n          >\n            <View>\n              <Text style={{ ...styles.themeText, color: theme.buttonsText }}>\n                Defualt mode\n              </Text>\n            </View>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {\n              changeTheme('Easy read mode');\n              navigation.navigate('home');\n            }}\n            style={{ ...styles.thmesbuttons, backgroundColor: theme.buttons }}\n          >\n            <View>\n              <Text style={{ ...styles.themeText, color: theme.buttonsText }}>\n                Easy read mode\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n        <View\n          // eslint-disable-next-line react-native/no-inline-styles\n          style={{\n            width: '80%',\n          }}\n        >\n          <TouchableOpacity\n            onPress={() => {\n              signOutUser();\n            }}\n            style={{ ...styles.signOut, backgroundColor: theme.buttons }}\n          >\n            <View>\n              <Text style={{ ...styles.themeText, color: theme.buttonsText }}>\n                Sign out\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#146B66',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  thmesbuttons: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#AFEFDF',\n    height: 60,\n    width: '100%',\n    marginTop: 10,\n    borderRadius: 10,\n  },\n  themeText: {\n    fontSize: 22,\n    fontWeight: '600',\n  },\n  signOut: {\n    marginBottom: 50,\n    width: '100%',\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}