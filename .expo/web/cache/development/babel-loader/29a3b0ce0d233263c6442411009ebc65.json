{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/Users/oo/Desktop/APPutvekling/ExamenProject/screens/gameScreen.js\",\n    _this2 = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { SnapShotUsers, SnapShotActiveQuestion, UpdateActiveQuestion, ResetAnswerdNum, SnapshotUserAnswerd, UpdateAnswerdNum, UpdateUserScore } from \"../firebase/Firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useNavigation } from '@react-navigation/native';\nexport default function GameBoard(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n\n  var _useState = useState(['']),\n      _useState2 = _slicedToArray(_useState, 2),\n      usersArray = _useState2[0],\n      setUsersArray = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeQuestion = _useState4[0],\n      SetActiveQuestion = _useState4[1];\n\n  var _useState5 = useState('#146B66'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      backgroundColor = _useState6[0],\n      setBackgroundColor = _useState6[1];\n\n  var _route$params = route.params,\n      questionArray = _route$params.questionArray,\n      gameKey = _route$params.gameKey;\n  var navigation = useNavigation();\n\n  var SnapShotObservers = function SnapShotObservers() {\n    SnapShotUsers(setUsersArray, gameKey);\n    SnapShotActiveQuestion(SetActiveQuestion, gameKey);\n  };\n\n  useEffect(function () {\n    SnapShotObservers();\n  }, []);\n  useEffect(function () {\n    console.log('här', questionArray.length - 1);\n\n    if (questionArray.length - 1 === activeQuestion) {\n      navigation.navigate('WinnerScreen', {\n        gameKey: gameKey\n      });\n    } else {\n      console.log('här i slutet');\n    }\n  }, [activeQuestion, gameKey, navigation, questionArray.length]);\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      backgroundColor: backgroundColor\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.questionView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.questionText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, questionArray[activeQuestion].question, \" \", '?')), usersArray.map(function (element, index) {\n    return React.createElement(ScoreFeild, {\n      key: index,\n      userName: element.userDisplayName,\n      userScore: element.userScore,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    });\n  }), React.createElement(AnswerFeilds, {\n    questionArray: questionArray,\n    activeQuestion: activeQuestion,\n    setActiveQuestion: SetActiveQuestion,\n    setBackgroundColor: setBackgroundColor,\n    usersArray: usersArray,\n    gameKey: gameKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar ScoreFeild = function ScoreFeild(_ref2) {\n  var userName = _ref2.userName,\n      userScore = _ref2.userScore;\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginBottom: 15\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.userNameAndScoreView,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.userNameScoreText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, userName), React.createElement(Text, {\n    style: styles.userScoreText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, userScore)));\n};\n\nvar AnswerFeilds = function AnswerFeilds(_ref3) {\n  var questionArray = _ref3.questionArray,\n      activeQuestion = _ref3.activeQuestion,\n      setActiveQuestion = _ref3.setActiveQuestion,\n      setBackgroundColor = _ref3.setBackgroundColor,\n      usersArray = _ref3.usersArray,\n      gameKey = _ref3.gameKey;\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      AnswerdNum = _useState8[0],\n      setAnswerdNum = _useState8[1];\n\n  var SnapShotObserver = function SnapShotObserver() {\n    SnapshotUserAnswerd(setAnswerdNum, gameKey);\n  };\n\n  useEffect(function () {\n    SnapShotObserver();\n  }, []);\n  useEffect(function () {\n    if (AnswerdNum === usersArray.length) {\n      ResetAnswerdNum(gameKey);\n      setTimeout(function () {\n        setBackgroundColor('#146B66');\n        UpdateActiveQuestion(activeQuestion, gameKey);\n      }, 2000);\n    }\n  }, [AnswerdNum, activeQuestion, gameKey, setActiveQuestion, setBackgroundColor, usersArray.length]);\n\n  var CheckAnswers = function CheckAnswers(value) {\n    var usersAnswer = questionArray[activeQuestion].Answers[value];\n    var questionsRightAnswer = questionArray[activeQuestion].rightAnswer;\n\n    if (usersAnswer === questionsRightAnswer) {\n      setBackgroundColor('green');\n      UpdateUserScore(user.email, gameKey);\n      UpdateAnswerdNum(AnswerdNum, gameKey);\n    } else {\n      setBackgroundColor('red');\n      UpdateAnswerdNum(AnswerdNum, gameKey);\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.answersView,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.leftSide,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.answers,\n    onPress: function onPress() {\n      CheckAnswers(0);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.answersText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, questionArray[activeQuestion].Answers[0]))), React.createElement(TouchableOpacity, {\n    style: styles.answers,\n    onPress: function onPress() {\n      CheckAnswers(1);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.answersText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, questionArray[activeQuestion].Answers[1])))), React.createElement(View, {\n    style: styles.rightSide,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.answers,\n    onPress: function onPress() {\n      CheckAnswers(2);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.answersText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, questionArray[activeQuestion].Answers[2]))), React.createElement(TouchableOpacity, {\n    style: styles.answers,\n    onPress: function onPress() {\n      CheckAnswers(3);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.answersText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, questionArray[activeQuestion].Answers[3])))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    backgroundColor: '#146B66'\n  },\n  leftSide: {\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    width: '50%',\n    height: '100%'\n  },\n  rightSide: {\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    width: '50%',\n    height: '100%'\n  },\n  answersView: {\n    height: '50%',\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  answers: {\n    width: '90%',\n    height: '40%',\n    backgroundColor: '#AFEFDF',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  answersText: {\n    fontSize: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontWeight: '600'\n  },\n  questionView: {\n    height: '50%',\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  questionText: {\n    fontSize: 30,\n    fontWeight: '600',\n    width: '80%'\n  },\n  underLineView: {\n    height: 1,\n    backgroundColor: 'black',\n    width: '95%'\n  },\n  userNameScoreText: {\n    width: '70%',\n    justifyContent: 'center',\n    fontSize: 22,\n    marginLeft: 20,\n    fontWeight: '500'\n  },\n  userScoreText: {\n    width: '20%',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    fontSize: 22,\n    fontWeight: '500'\n  },\n  userNameAndScoreView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/oo/Desktop/APPutvekling/ExamenProject/screens/gameScreen.js"],"names":["React","useEffect","useState","useContext","SnapShotUsers","SnapShotActiveQuestion","UpdateActiveQuestion","ResetAnswerdNum","SnapshotUserAnswerd","UpdateAnswerdNum","UpdateUserScore","AuthContext","useNavigation","GameBoard","route","usersArray","setUsersArray","activeQuestion","SetActiveQuestion","backgroundColor","setBackgroundColor","params","questionArray","gameKey","navigation","SnapShotObservers","console","log","length","navigate","styles","container","questionView","questionText","question","map","element","index","userDisplayName","userScore","ScoreFeild","userName","flexDirection","marginBottom","userNameAndScoreView","userNameScoreText","userScoreText","AnswerFeilds","setActiveQuestion","user","AnswerdNum","setAnswerdNum","SnapShotObserver","setTimeout","CheckAnswers","value","usersAnswer","Answers","questionsRightAnswer","rightAnswer","email","answersView","leftSide","answers","answersText","rightSide","StyleSheet","create","flex","alignItems","justifyContent","width","height","borderRadius","fontSize","fontWeight","underLineView","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Button,\n  Alert,\n} from 'react-native';\nimport {\n  SnapShotUsers,\n  SnapShotActiveQuestion,\n  UpdateActiveQuestion,\n  ResetAnswerdNum,\n  SnapshotUserAnswerd,\n  UpdateAnswerdNum,\n  UpdateUserScore,\n} from '../firebase/Firebase';\nimport { AuthContext } from '../context/AuthContext';\nimport { useNavigation } from '@react-navigation/native';\n\nexport default function GameBoard({ route }) {\n  const [usersArray, setUsersArray] = useState(['']);\n  const [activeQuestion, SetActiveQuestion] = useState(0);\n  const [backgroundColor, setBackgroundColor] = useState('#146B66');\n  //const { user } = useContext(AuthContext);\n  const { questionArray, gameKey } = route.params;\n  const navigation = useNavigation();\n\n  const SnapShotObservers = () => {\n    SnapShotUsers(setUsersArray, gameKey);\n    SnapShotActiveQuestion(SetActiveQuestion, gameKey);\n  };\n\n  useEffect(() => {\n    SnapShotObservers();\n\n    //GetQuestionInfo(setQuestionArray);\n  }, []);\n\n  useEffect(() => {\n    console.log('här', questionArray.length - 1);\n    if (questionArray.length - 1 === activeQuestion) {\n      navigation.navigate('WinnerScreen', { gameKey: gameKey });\n\n      //console.log('sista frågan', questionArray.length, activeQuestion);\n    } else {\n      console.log('här i slutet');\n    }\n    //////////////////////////////\n  }, [activeQuestion, gameKey, navigation, questionArray.length]);\n\n  return (\n    <View style={{ ...styles.container, backgroundColor: backgroundColor }}>\n      <View style={styles.questionView}>\n        <Text style={styles.questionText}>\n          {questionArray[activeQuestion].question} {'?'}\n        </Text>\n      </View>\n\n      {usersArray.map((element, index) => (\n        <ScoreFeild\n          key={index}\n          userName={element.userDisplayName}\n          userScore={element.userScore}\n        />\n      ))}\n\n      <AnswerFeilds\n        questionArray={questionArray}\n        activeQuestion={activeQuestion}\n        setActiveQuestion={SetActiveQuestion}\n        setBackgroundColor={setBackgroundColor}\n        usersArray={usersArray}\n        gameKey={gameKey}\n\n        //questionArrayAnswers={questionArray[0].Answers}\n      />\n    </View>\n  );\n}\nconst ScoreFeild = ({ userName, userScore }) => {\n  return (\n    <View style={{ flexDirection: 'row', marginBottom: 15 }}>\n      <View style={styles.userNameAndScoreView}>\n        <Text style={styles.userNameScoreText}>{userName}</Text>\n        <Text style={styles.userScoreText}>{userScore}</Text>\n      </View>\n    </View>\n  );\n};\n\nconst AnswerFeilds = ({\n  questionArray,\n  activeQuestion,\n  setActiveQuestion,\n  setBackgroundColor,\n  usersArray,\n  gameKey,\n}) => {\n  const { user } = useContext(AuthContext);\n  //const [ifAnswerd, setIfAnswerd] = useState([]);\n  const [AnswerdNum, setAnswerdNum] = useState(0);\n\n  const SnapShotObserver = () => {\n    //console.log('OBSERVER');\n    SnapshotUserAnswerd(setAnswerdNum, gameKey);\n  };\n  useEffect(() => {\n    // console.log('EFFECT');\n    SnapShotObserver();\n  }, []);\n\n  useEffect(() => {\n    if (AnswerdNum === usersArray.length) {\n      // knasar?\n      //UpdateUserScore();\n      ResetAnswerdNum(gameKey);\n      setTimeout(function () {\n        setBackgroundColor('#146B66');\n\n        UpdateActiveQuestion(activeQuestion, gameKey);\n      }, 2000);\n    } /* else {\n      console.log('answerdNum = ', AnswerdNum);\n    } */\n  }, [\n    AnswerdNum,\n    activeQuestion,\n    gameKey,\n    setActiveQuestion,\n    setBackgroundColor,\n    usersArray.length,\n  ]);\n\n  const CheckAnswers = (value) => {\n    let usersAnswer = questionArray[activeQuestion].Answers[value];\n    let questionsRightAnswer = questionArray[activeQuestion].rightAnswer;\n\n    if (usersAnswer === questionsRightAnswer) {\n      setBackgroundColor('green');\n      //console.log('emil', user);\n      UpdateUserScore(user.email, gameKey);\n\n      // setTimeout(function () {\n      /* for (let index = 0; index < usersArray.length; index++) {\n        if (usersArray[index].userName == 'idaa') {\n          UpdateUserScore();\n        }\n      } */\n      UpdateAnswerdNum(AnswerdNum, gameKey);\n      // setBackgroundColor('#146B66');\n      // }, 2000);\n    } else {\n      setBackgroundColor('red');\n      //setTimeout(function () {\n      UpdateAnswerdNum(AnswerdNum, gameKey);\n      //setBackgroundColor('#146B66');\n      // }, 2000);\n    }\n  };\n\n  return (\n    <View style={styles.answersView}>\n      <View style={styles.leftSide}>\n        <TouchableOpacity\n          style={styles.answers}\n          onPress={() => {\n            CheckAnswers(0);\n          }}\n        >\n          <View>\n            <Text style={styles.answersText}>\n              {questionArray[activeQuestion].Answers[0]}\n            </Text>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.answers}\n          onPress={() => {\n            CheckAnswers(1);\n          }}\n        >\n          <View>\n            <Text style={styles.answersText}>\n              {questionArray[activeQuestion].Answers[1]}\n            </Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.rightSide}>\n        <TouchableOpacity\n          style={styles.answers}\n          onPress={() => {\n            CheckAnswers(2);\n          }}\n        >\n          <View>\n            <Text style={styles.answersText}>\n              {questionArray[activeQuestion].Answers[2]}\n            </Text>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.answers}\n          onPress={() => {\n            CheckAnswers(3);\n          }}\n        >\n          <View>\n            <Text style={styles.answersText}>\n              {questionArray[activeQuestion].Answers[3]}\n            </Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    backgroundColor: '#146B66',\n  },\n  leftSide: {\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    width: '50%',\n    height: '100%',\n  },\n  rightSide: {\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    width: '50%',\n    height: '100%',\n  },\n  answersView: {\n    height: '50%',\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  answers: {\n    width: '90%',\n    height: '40%',\n    backgroundColor: '#AFEFDF',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  answersText: {\n    fontSize: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontWeight: '600',\n  },\n  questionView: {\n    height: '50%',\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  questionText: {\n    fontSize: 30,\n    fontWeight: '600',\n    width: '80%',\n  },\n  underLineView: {\n    height: 1,\n    backgroundColor: 'black',\n    width: '95%',\n  },\n  userNameScoreText: {\n    width: '70%',\n    justifyContent: 'center',\n    fontSize: 22,\n    marginLeft: 20,\n    fontWeight: '500',\n  },\n  userScoreText: {\n    width: '20%',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    fontSize: 22,\n    fontWeight: '500',\n  },\n  userNameAndScoreView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\n/* const ScoreFeild = () => {\n  const [UsersArray, setUsersArray] = useState(['']);\n  useEffect(() => {\n    SnapShotUsers(setUsersArray);\n  }, [UsersArray]);\n  return (\n    <View style={{ flexDirection: 'row', marginBottom: 15 }}>\n      <View style={{ width: '50%' }}>\n        <View style={styles.userNameAndScoreView}>\n          <Text style={styles.userNameScoreText}>{UsersArray[0].userName}</Text>\n          <Text style={styles.userScoreText}>{UsersArray[0].userScore}</Text>\n        </View>\n        <View style={{ ...styles.underLineView, marginLeft: 20 }} />\n        <View style={styles.userNameAndScoreView}>\n          <Text style={styles.userNameScoreText}>esdsmil:</Text>\n          <Text style={styles.userScoreText}>6</Text>\n        </View>\n        <View style={{ ...styles.underLineView, marginLeft: 20 }} />\n      </View>\n      <View style={{ width: '50%' }}>\n        <View style={styles.userNameAndScoreView}>\n          <Text style={{ ...styles.userNameScoreText, marginLeft: 0 }}>\n            esdsmil:\n          </Text>\n          <Text style={styles.userScoreText}>6</Text>\n        </View>\n        <View style={styles.underLineView} />\n\n        <View style={styles.userNameAndScoreView}>\n          <Text style={{ ...styles.userNameScoreText, marginLeft: 0 }}>\n            emil:\n          </Text>\n          <Text style={{ ...styles.userScoreText }}>6</Text>\n        </View>\n        <View style={styles.underLineView} />\n      </View>\n    </View>\n  );\n}; */\n"]},"metadata":{},"sourceType":"module"}