{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/Users/lanedator/Documents/GitHub/ExamenProject/src/screens/participantScreen.js\",\n    _this2 = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LinearGradient } from 'expo-linear-gradient';\nimport React, { useEffect, useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport { GetQuestionInfo, SnapShotUsers, SnapShotStartGame, StartGame, addUserAnswer } from \"../firebase/Firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ThemeContext } from \"../context/ThemeContext\";\nexport default function JoinGame(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  var _useContext2 = useContext(ThemeContext),\n      theme = _useContext2.theme;\n\n  var navigation = useNavigation();\n  var gameKey = route.params.gameKey;\n\n  var _useState = useState(['']),\n      _useState2 = _slicedToArray(_useState, 2),\n      userArray = _useState2[0],\n      setUserArray = _useState2[1];\n\n  var _useState3 = useState(['']),\n      _useState4 = _slicedToArray(_useState3, 2),\n      questionArray = _useState4[0],\n      setQuestionArray = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      shouldShow = _useState6[0],\n      setShouldShow = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      startGame = _useState8[0],\n      setStartGame = _useState8[1];\n\n  useEffect(function () {\n    SnapShotUsers(setUserArray, gameKey);\n    SnapShotStartGame(setStartGame, gameKey);\n    GetQuestionInfo(setQuestionArray, gameKey);\n  }, []);\n  useEffect(function () {\n    userArray.forEach(function (element) {\n      if (user.email === element.userEmail) {\n        if (element.host) {\n          return setShouldShow(true);\n        } else {\n          return setShouldShow(false);\n        }\n      }\n    });\n  }, [userArray]);\n  useEffect(function () {\n    if (startGame) {\n      navigation.navigate('GameScreen', {\n        questionArray: questionArray,\n        gameKey: gameKey\n      });\n    }\n  }, [startGame]);\n  return React.createElement(LinearGradient, {\n    colors: theme.linearBackgroundColor,\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      backgroundColor: theme.backgroundColor\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.participantView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.participantTextHeader), {}, {\n      color: theme.color\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Deltagare\"), React.createElement(Text, {\n    style: {\n      color: theme.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Spel nyckel:\"), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.gameKey), {}, {\n      color: theme.color\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, gameKey), userArray.map(function (element, index) {\n    return React.createElement(ParticipantView, {\n      key: index,\n      element: element.userDisplayName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    });\n  })), shouldShow ? React.createElement(TouchableOpacity, {\n    style: _objectSpread(_objectSpread({}, styles.button), {}, {\n      backgroundColor: theme.linearButton,\n      shadowColor: theme.shadowColor\n    }),\n    onPress: function onPress() {\n      StartGame(gameKey);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.buttonText), {}, {\n      color: theme.buttonText\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Starta Spel\")) : null);\n}\n\nvar ParticipantView = function ParticipantView(_ref2) {\n  var element = _ref2.element;\n\n  var _useContext3 = useContext(ThemeContext),\n      theme = _useContext3.theme;\n\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.participantText), {}, {\n      color: theme.color\n    }),\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, element), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.underLineView), {}, {\n      backgroundColor: theme.color\n    }),\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#146B66'\n  },\n  button1: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%',\n    height: '10%',\n    backgroundColor: '#AFEFDF',\n    marginBottom: 100,\n    borderRadius: 20\n  },\n  buttonText: {\n    fontSize: 30,\n    fontWeight: '600'\n  },\n  underLineView: {\n    height: 3,\n    backgroundColor: 'black',\n    marginTop: 3,\n    width: '60%'\n  },\n  participantText: {\n    fontWeight: '500',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 15,\n    letterSpacing: 4,\n    fontSize: 22\n  },\n  participantTextHeader: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    marginBottom: 20\n  },\n  participantView: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 200\n  },\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#AFEFDF',\n    width: '80%',\n    height: '10%',\n    marginBottom: 100,\n    borderRadius: 15,\n    shadowColor: 'white',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 10\n  },\n  gameKey: {\n    fontSize: 18,\n    marginBottom: 10,\n    fontWeight: '600'\n  }\n});","map":{"version":3,"sources":["/Users/lanedator/Documents/GitHub/ExamenProject/src/screens/participantScreen.js"],"names":["LinearGradient","React","useEffect","useState","useContext","useNavigation","GetQuestionInfo","SnapShotUsers","SnapShotStartGame","StartGame","addUserAnswer","AuthContext","ThemeContext","JoinGame","route","user","theme","navigation","gameKey","params","userArray","setUserArray","questionArray","setQuestionArray","shouldShow","setShouldShow","startGame","setStartGame","forEach","element","email","userEmail","host","navigate","linearBackgroundColor","styles","container","backgroundColor","participantView","participantTextHeader","color","map","index","userDisplayName","button","linearButton","shadowColor","buttonText","ParticipantView","participantText","underLineView","StyleSheet","create","flex","alignItems","justifyContent","button1","width","height","marginBottom","borderRadius","fontSize","fontWeight","marginTop","letterSpacing","shadowOffset","shadowOpacity","shadowRadius"],"mappings":"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","sourcesContent":["//REACT\nimport { LinearGradient } from 'expo-linear-gradient'\nimport React, { useEffect, useState, useContext } from 'react'\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native'\n\n//NAVIGATION\nimport { useNavigation } from '@react-navigation/native'\n\n//FIREBASE\nimport {\n  GetQuestionInfo,\n  SnapShotUsers,\n  SnapShotStartGame,\n  StartGame,\n  addUserAnswer,\n} from '../firebase/Firebase'\n\n// CONTEXTS\nimport { AuthContext } from '../context/AuthContext'\nimport { ThemeContext } from '../context/ThemeContext'\n\nexport default function JoinGame({ route }) {\n  const { user } = useContext(AuthContext)\n  const { theme } = useContext(ThemeContext)\n  const navigation = useNavigation()\n  const { gameKey } = route.params\n  const [userArray, setUserArray] = useState([''])\n  const [questionArray, setQuestionArray] = useState([''])\n  const [shouldShow, setShouldShow] = useState(false)\n  const [startGame, setStartGame] = useState(false)\n\n  useEffect(() => {\n    SnapShotUsers(setUserArray, gameKey)\n    SnapShotStartGame(setStartGame, gameKey)\n    GetQuestionInfo(setQuestionArray, gameKey)\n  }, [])\n\n  // checks if user is host and shows start game\n  useEffect(() => {\n    userArray.forEach((element) => {\n      if (user.email === element.userEmail) {\n        if (element.host) {\n          return setShouldShow(true)\n        } else {\n          return setShouldShow(false)\n        }\n      }\n    })\n  }, [userArray])\n\n  useEffect(() => {\n    if (startGame) {\n      navigation.navigate('GameScreen', {\n        questionArray: questionArray,\n        gameKey: gameKey,\n      })\n    }\n  }, [startGame])\n\n  return (\n    <LinearGradient\n      colors={theme.linearBackgroundColor}\n      style={{ ...styles.container, backgroundColor: theme.backgroundColor }}\n    >\n      <View style={styles.participantView}>\n        <Text style={{ ...styles.participantTextHeader, color: theme.color }}>\n          Deltagare\n        </Text>\n        <Text style={{ color: theme.color }}>Spel nyckel:</Text>\n        <Text style={{ ...styles.gameKey, color: theme.color }}>{gameKey}</Text>\n\n        {userArray.map((element, index) => (\n          <ParticipantView key={index} element={element.userDisplayName} />\n        ))}\n      </View>\n      {/* hide the start button for the other players */}\n      {shouldShow ? (\n        <TouchableOpacity\n          style={{\n            ...styles.button,\n            backgroundColor: theme.linearButton,\n            shadowColor: theme.shadowColor,\n          }}\n          onPress={() => {\n            StartGame(gameKey)\n          }}\n        >\n          <Text style={{ ...styles.buttonText, color: theme.buttonText }}>\n            Starta Spel\n          </Text>\n        </TouchableOpacity>\n      ) : null}\n    </LinearGradient>\n  )\n}\n\nconst ParticipantView = ({ element }) => {\n  const { theme } = useContext(ThemeContext)\n\n  return (\n    <>\n      <Text style={{ ...styles.participantText, color: theme.color }}>\n        {element}\n      </Text>\n      <View style={{ ...styles.underLineView, backgroundColor: theme.color }} />\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#146B66',\n  },\n  button1: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%',\n    height: '10%',\n    backgroundColor: '#AFEFDF',\n    marginBottom: 100,\n    borderRadius: 20,\n  },\n  buttonText: {\n    fontSize: 30,\n    fontWeight: '600',\n  },\n  underLineView: {\n    height: 3,\n    backgroundColor: 'black',\n    marginTop: 3,\n    width: '60%',\n  },\n  participantText: {\n    fontWeight: '500',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 15,\n    letterSpacing: 4,\n    fontSize: 22,\n  },\n  participantTextHeader: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    marginBottom: 20,\n  },\n  participantView: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 200,\n  },\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#AFEFDF',\n    width: '80%',\n    height: '10%',\n    marginBottom: 100,\n    borderRadius: 15,\n    shadowColor: 'white',\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.3,\n    shadowRadius: 10,\n  },\n  gameKey: {\n    fontSize: 18,\n    marginBottom: 10,\n    fontWeight: '600',\n  },\n})\n"]},"metadata":{},"sourceType":"module"}