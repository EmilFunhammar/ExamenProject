{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/Users/lanedator/Documents/GitHub/ExamenProject/screens/gameScreen.js\",\n    _this2 = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport { SnapShotUsers, SnapShotActiveQuestion, UpdateActiveQuestion, ResetAnswerdNum, SnapshotUserAnswerd, UpdateAnswerdNum, UpdateUserScore, SaveUserAnswers, SaveUserAnswers1 } from \"../firebase/Firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ThemeContext } from \"../context/ThemeContext\";\nimport { useNavigation } from '@react-navigation/native';\nLogBox.ignoreLogs(['Setting a timer']);\nexport default function GameBoard(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var _useState = useState(['']),\n      _useState2 = _slicedToArray(_useState, 2),\n      usersArray = _useState2[0],\n      setUsersArray = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeQuestion = _useState4[0],\n      SetActiveQuestion = _useState4[1];\n\n  var _useState5 = useState(\"\" + theme.linearBackgroundColor),\n      _useState6 = _slicedToArray(_useState5, 2),\n      backgroundColor = _useState6[0],\n      setBackgroundColor = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalVisiable = _useState8[0],\n      setModalVisable = _useState8[1];\n\n  var _route$params = route.params,\n      questionArray = _route$params.questionArray,\n      gameKey = _route$params.gameKey;\n  var navigation = useNavigation();\n  useEffect(function () {\n    SnapShotUsers(setUsersArray, gameKey);\n    SnapShotActiveQuestion(SetActiveQuestion, gameKey);\n  }, []);\n  useEffect(function () {\n    if (questionArray.length - 1 === activeQuestion) {\n      navigation.navigate('WinnerScreen', {\n        gameKey: gameKey\n      });\n    } else {}\n  }, [activeQuestion, gameKey, navigation, questionArray.length]);\n  return React.createElement(LinearGradient, {\n    colors: theme.linearBackgroundColor,\n    style: _objectSpread({}, styles.container),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.questionView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.questionText), {}, {\n      color: theme.color\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, questionArray[activeQuestion].question, \" \", '?')), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisiable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      position: 'absolute',\n      top: '8%',\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: 'rgba(20, 107, 102, 0.8)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      fontWeight: '600'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \"Right answer:\"), React.createElement(Text, {\n    style: {\n      fontSize: 22,\n      fontWeight: '600'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, questionArray[activeQuestion].rightAnswer)), React.createElement(View, {\n    style: {\n      backgroundColor: 'rgba(20, 107, 102, 0.8)',\n      width: '100%',\n      position: 'absolute',\n      bottom: '10%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, usersArray.map(function (element, index) {\n    return React.createElement(ModalTextComponent, {\n      element: element,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    });\n  }))))), React.createElement(AnswerFeilds, {\n    questionArray: questionArray,\n    activeQuestion: activeQuestion,\n    setActiveQuestion: SetActiveQuestion,\n    setBackgroundColor: setBackgroundColor,\n    usersArray: usersArray,\n    gameKey: gameKey,\n    setModalVisable: setModalVisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar ModalTextComponent = function ModalTextComponent(_ref2) {\n  var element = _ref2.element;\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginBottom: 10,\n      justifyContent: 'center',\n      fontSize: 22\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      position: 'absolute',\n      left: '5%',\n      fontSize: 22,\n      fontWeight: '600'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, element.userDisplayName), React.createElement(Text, {\n    style: {\n      marginLeft: '20%',\n      fontSize: 22,\n      fontWeight: '600'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, element.userAnswer));\n};\n\nvar ScoreFeild = function ScoreFeild(_ref3) {\n  var userName = _ref3.userName,\n      userScore = _ref3.userScore;\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginTop: 10\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.userNameAndScoreView,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.userNameScoreText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, userName), React.createElement(Text, {\n    style: styles.userScoreText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, userScore)));\n};\n\nvar AnswerFeilds = function AnswerFeilds(_ref4) {\n  var questionArray = _ref4.questionArray,\n      activeQuestion = _ref4.activeQuestion,\n      setActiveQuestion = _ref4.setActiveQuestion,\n      setBackgroundColor = _ref4.setBackgroundColor,\n      usersArray = _ref4.usersArray,\n      gameKey = _ref4.gameKey,\n      setModalVisable = _ref4.setModalVisable;\n\n  var _useContext2 = useContext(ThemeContext),\n      theme = _useContext2.theme;\n\n  var _useContext3 = useContext(AuthContext),\n      user = _useContext3.user;\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      AnswerdNum = _useState10[0],\n      setAnswerdNum = _useState10[1];\n\n  var usersAnswer = questionArray[activeQuestion];\n  useEffect(function () {\n    SnapshotUserAnswerd(setAnswerdNum, gameKey);\n  }, [gameKey]);\n  useEffect(function () {\n    if (AnswerdNum === usersArray.length) {\n      ResetAnswerdNum(gameKey);\n      setModalVisable(true);\n      setTimeout(function () {\n        setBackgroundColor('#146B66');\n        UpdateActiveQuestion(activeQuestion, gameKey);\n        setModalVisable(false);\n      }, 4000);\n    }\n  }, [AnswerdNum, activeQuestion, gameKey, setActiveQuestion, setBackgroundColor, setModalVisable, usersArray.length]);\n\n  var CheckAnswers = function CheckAnswers(value) {\n    var usersAnswerd = questionArray[activeQuestion].Answers[value];\n    var questionsRightAnswer = questionArray[activeQuestion].rightAnswer;\n\n    if (usersAnswerd === questionsRightAnswer) {\n      setBackgroundColor('green');\n      UpdateUserScore(user.email, gameKey);\n      UpdateAnswerdNum(AnswerdNum, gameKey);\n    } else {\n      setBackgroundColor('red');\n      UpdateAnswerdNum(AnswerdNum, gameKey);\n    }\n  };\n\n  return React.createElement(View, {\n    style: {\n      height: '50%',\n      width: '95%',\n      alignItems: 'center',\n      backgroundColor: 'white',\n      borderRadius: 20\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }\n  }, usersArray.map(function (element, index) {\n    return React.createElement(ScoreFeild, {\n      key: index,\n      userName: element.userDisplayName,\n      userScore: element.userScore,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }\n    });\n  }), React.createElement(View, {\n    style: styles.answersView,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.leftSide,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: _objectSpread(_objectSpread({}, styles.answers), {}, {\n      backgroundColor: theme.buttons,\n      borderColor: theme.borderColor\n    }),\n    onPress: function onPress() {\n      SaveUserAnswers(usersAnswer.Answers[0], gameKey, user.email);\n      CheckAnswers(0);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.answersText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, questionArray[activeQuestion].Answers[0]))), React.createElement(TouchableOpacity, {\n    style: _objectSpread(_objectSpread({}, styles.answers), {}, {\n      backgroundColor: theme.buttons,\n      borderColor: theme.borderColor\n    }),\n    onPress: function onPress() {\n      SaveUserAnswers(usersAnswer.Answers[1], gameKey, user.email);\n      CheckAnswers(1);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.answersText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }, questionArray[activeQuestion].Answers[1])))), React.createElement(View, {\n    style: styles.rightSide,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: _objectSpread(_objectSpread({}, styles.answers), {}, {\n      backgroundColor: theme.buttons,\n      borderColor: theme.borderColor\n    }),\n    onPress: function onPress() {\n      SaveUserAnswers(usersAnswer.Answers[2], gameKey, user.email);\n      CheckAnswers(2);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.answersText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  }, questionArray[activeQuestion].Answers[2]))), React.createElement(TouchableOpacity, {\n    style: _objectSpread(_objectSpread({}, styles.answers), {}, {\n      backgroundColor: theme.buttons,\n      borderColor: theme.borderColor\n    }),\n    onPress: function onPress() {\n      SaveUserAnswers(usersAnswer.Answers[3], gameKey, user.email);\n      CheckAnswers(3);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.answersText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 15\n    }\n  }, questionArray[activeQuestion].Answers[3]))))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    backgroundColor: '#146B66'\n  },\n  leftSide: {\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    width: '50%',\n    height: '100%'\n  },\n  rightSide: {\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    width: '50%',\n    height: '100%'\n  },\n  answersView: {\n    height: '90%',\n    width: '95%',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  answers: {\n    width: '90%',\n    height: '40%',\n    backgroundColor: '#AFEFDF',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: 'black',\n    borderLeftWidth: 5,\n    borderBottomWidth: 10,\n    borderRightWidth: 3,\n    borderTopWidth: 3,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 20\n  },\n  answersText: {\n    fontSize: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontWeight: '600'\n  },\n  questionView: {\n    height: '30%',\n    width: '95%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderBottomColor: 'grey',\n    borderWidth: 3,\n    borderRadius: 20\n  },\n  questionText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 30,\n    fontWeight: '600',\n    width: '80%'\n  },\n  underLineView: {\n    height: 1,\n    backgroundColor: 'black',\n    width: '95%'\n  },\n  userNameScoreText: {\n    width: '70%',\n    justifyContent: 'center',\n    fontSize: 22,\n    marginLeft: 20,\n    fontWeight: '500'\n  },\n  userScoreText: {\n    width: '20%',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    fontSize: 22,\n    fontWeight: '500'\n  },\n  userNameAndScoreView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modal: {\n    position: 'absolute',\n    top: '40%',\n    width: '90%',\n    height: '30%',\n    backgroundColor: 'rgba(20, 107, 102, 0.9)',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 20\n  }\n});","map":{"version":3,"sources":["/Users/lanedator/Documents/GitHub/ExamenProject/screens/gameScreen.js"],"names":["React","useEffect","useState","useContext","LinearGradient","LogBox","SnapShotUsers","SnapShotActiveQuestion","UpdateActiveQuestion","ResetAnswerdNum","SnapshotUserAnswerd","UpdateAnswerdNum","UpdateUserScore","SaveUserAnswers","SaveUserAnswers1","AuthContext","ThemeContext","useNavigation","ignoreLogs","GameBoard","route","theme","usersArray","setUsersArray","activeQuestion","SetActiveQuestion","linearBackgroundColor","backgroundColor","setBackgroundColor","modalVisiable","setModalVisable","params","questionArray","gameKey","navigation","length","navigate","styles","container","questionView","questionText","color","question","modal","width","position","top","justifyContent","alignItems","fontSize","fontWeight","rightAnswer","bottom","map","element","index","ModalTextComponent","flexDirection","marginBottom","left","userDisplayName","marginLeft","userAnswer","ScoreFeild","userName","userScore","marginTop","userNameAndScoreView","userNameScoreText","userScoreText","AnswerFeilds","setActiveQuestion","user","AnswerdNum","setAnswerdNum","usersAnswer","setTimeout","CheckAnswers","value","usersAnswerd","Answers","questionsRightAnswer","email","height","borderRadius","answersView","leftSide","answers","buttons","borderColor","answersText","rightSide","StyleSheet","create","flex","borderLeftWidth","borderBottomWidth","borderRightWidth","borderTopWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderBottomColor","borderWidth","underLineView","alignSelf"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Modal,\n  LogBox,\n} from 'react-native';\nimport {\n  SnapShotUsers,\n  SnapShotActiveQuestion,\n  UpdateActiveQuestion,\n  ResetAnswerdNum,\n  SnapshotUserAnswerd,\n  UpdateAnswerdNum,\n  UpdateUserScore,\n  SaveUserAnswers,\n  SaveUserAnswers1,\n} from '../firebase/Firebase';\n\n// CONTEXTS\nimport { AuthContext } from '../context/AuthContext';\nimport { ThemeContext } from '../context/ThemeContext';\n\nimport { useNavigation } from '@react-navigation/native';\nLogBox.ignoreLogs(['Setting a timer']);\n\nexport default function GameBoard({ route }) {\n  const { theme } = useContext(ThemeContext);\n  const [usersArray, setUsersArray] = useState(['']);\n  const [activeQuestion, SetActiveQuestion] = useState(0);\n  const [backgroundColor, setBackgroundColor] = useState(\n    `${theme.linearBackgroundColor}`\n  );\n  const [modalVisiable, setModalVisable] = useState(false);\n\n  //const { user } = useContext(AuthContext);\n\n  const { questionArray, gameKey } = route.params;\n  const navigation = useNavigation();\n\n  /*  const SnapShotObservers = () => {\n    SnapShotUsers(setUsersArray, gameKey);\n    SnapShotActiveQuestion(SetActiveQuestion, gameKey);\n  }; */\n\n  useEffect(() => {\n    SnapShotUsers(setUsersArray, gameKey);\n    SnapShotActiveQuestion(SetActiveQuestion, gameKey);\n\n    //GetQuestionInfo(setQuestionArray);\n  }, []);\n\n  useEffect(() => {\n    //console.log('här', questionArray.length - 1);\n    if (questionArray.length - 1 === activeQuestion) {\n      navigation.navigate('WinnerScreen', { gameKey: gameKey });\n\n      //console.log('sista frågan', questionArray.length, activeQuestion);\n    } else {\n      //console.log('här i slutet');\n    }\n    //////////////////////////////\n  }, [activeQuestion, gameKey, navigation, questionArray.length]);\n\n  return (\n    <LinearGradient\n      colors={theme.linearBackgroundColor}\n      style={{\n        ...styles.container,\n      }}\n    >\n      <View style={styles.questionView}>\n        <Text style={{ ...styles.questionText, color: theme.color }}>\n          {questionArray[activeQuestion].question} {'?'}\n        </Text>\n      </View>\n      {/* {usersArray.map((element, index) => (\n        <ScoreFeild\n          key={index}\n          userName={element.userDisplayName}\n          userScore={element.userScore}\n        />\n      ))} */}\n      <View>\n        <Modal animationType=\"slide\" transparent={true} visible={modalVisiable}>\n          <View style={styles.modal}>\n            <View\n              style={{\n                width: '100%',\n                position: 'absolute',\n                top: '8%',\n                justifyContent: 'center',\n                alignItems: 'center',\n                backgroundColor: 'rgba(20, 107, 102, 0.8)',\n              }}\n            >\n              <Text style={{ fontSize: 16, fontWeight: '600' }}>\n                Right answer:\n              </Text>\n              <Text style={{ fontSize: 22, fontWeight: '600' }}>\n                {questionArray[activeQuestion].rightAnswer}\n              </Text>\n            </View>\n            <View\n              style={{\n                backgroundColor: 'rgba(20, 107, 102, 0.8)',\n                width: '100%',\n                position: 'absolute',\n                bottom: '10%',\n              }}\n            >\n              {usersArray.map((element, index) => (\n                <ModalTextComponent element={element} key={index} />\n              ))}\n            </View>\n          </View>\n        </Modal>\n      </View>\n      <AnswerFeilds\n        questionArray={questionArray}\n        activeQuestion={activeQuestion}\n        setActiveQuestion={SetActiveQuestion}\n        setBackgroundColor={setBackgroundColor}\n        usersArray={usersArray}\n        gameKey={gameKey}\n        setModalVisable={setModalVisable}\n      />\n    </LinearGradient>\n  );\n}\n\nconst ModalTextComponent = ({ element }) => {\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        marginBottom: 10,\n        justifyContent: 'center',\n        fontSize: 22,\n      }}\n    >\n      <Text\n        style={{\n          position: 'absolute',\n          left: '5%',\n          fontSize: 22,\n          fontWeight: '600',\n        }}\n      >\n        {element.userDisplayName}\n      </Text>\n      <Text\n        style={{\n          marginLeft: '20%',\n          fontSize: 22,\n          fontWeight: '600',\n        }} /* style={{ position: 'absolute', left: '50%' }} */\n      >\n        {element.userAnswer}\n      </Text>\n    </View>\n  );\n};\n/* const ScoreFeild = ({ userName, userScore }) => {\n  return (\n    <View style={{ flexDirection: 'row', marginBottom: 15 }}>\n      <View style={styles.userNameAndScoreView}>\n        <Text style={styles.userNameScoreText}>{userName}</Text>\n        <Text style={styles.userScoreText}>{userScore}</Text>\n      </View>\n    </View>\n  );\n}; */\nconst ScoreFeild = ({ userName, userScore }) => {\n  return (\n    <View style={{ flexDirection: 'row', marginTop: 10 }}>\n      <View style={styles.userNameAndScoreView}>\n        <Text style={styles.userNameScoreText}>{userName}</Text>\n        <Text style={styles.userScoreText}>{userScore}</Text>\n      </View>\n    </View>\n  );\n};\n\nconst AnswerFeilds = ({\n  questionArray,\n  activeQuestion,\n  setActiveQuestion,\n  setBackgroundColor,\n  usersArray,\n  gameKey,\n  setModalVisable,\n}) => {\n  const { theme } = useContext(ThemeContext);\n  const { user } = useContext(AuthContext);\n  const [AnswerdNum, setAnswerdNum] = useState(0);\n  let usersAnswer = questionArray[activeQuestion];\n\n  useEffect(() => {\n    SnapshotUserAnswerd(setAnswerdNum, gameKey);\n  }, [gameKey]);\n\n  useEffect(() => {\n    if (AnswerdNum === usersArray.length) {\n      ResetAnswerdNum(gameKey);\n      setModalVisable(true);\n      setTimeout(function () {\n        setBackgroundColor('#146B66');\n        UpdateActiveQuestion(activeQuestion, gameKey);\n        setModalVisable(false);\n      }, 4000);\n    }\n  }, [\n    AnswerdNum,\n    activeQuestion,\n    gameKey,\n    setActiveQuestion,\n    setBackgroundColor,\n    setModalVisable,\n    usersArray.length,\n  ]);\n\n  const CheckAnswers = (value) => {\n    let usersAnswerd = questionArray[activeQuestion].Answers[value];\n    let questionsRightAnswer = questionArray[activeQuestion].rightAnswer;\n    //SaveUserAnswers(usersAnswer, gameKey, user.email);\n\n    //saveUsersAnswers(usersAnswer);\n\n    if (usersAnswerd === questionsRightAnswer) {\n      setBackgroundColor('green');\n      UpdateUserScore(user.email, gameKey);\n      UpdateAnswerdNum(AnswerdNum, gameKey);\n    } else {\n      setBackgroundColor('red');\n      UpdateAnswerdNum(AnswerdNum, gameKey);\n    }\n  };\n\n  /*   const saveUsersAnswers = (userAnswer) => {\n    SaveUserAnswers(userAnswer, gameKey, user.email);\n  }; */\n\n  return (\n    <View\n      style={{\n        height: '50%',\n        width: '95%',\n        alignItems: 'center',\n        backgroundColor: 'white',\n        borderRadius: 20,\n      }}\n    >\n      {usersArray.map((element, index) => (\n        <ScoreFeild\n          key={index}\n          userName={element.userDisplayName}\n          userScore={element.userScore}\n        />\n      ))}\n\n      <View style={styles.answersView}>\n        <View style={styles.leftSide}>\n          <TouchableOpacity\n            style={{\n              ...styles.answers,\n              backgroundColor: theme.buttons,\n              borderColor: theme.borderColor,\n            }}\n            onPress={() => {\n              SaveUserAnswers(usersAnswer.Answers[0], gameKey, user.email);\n              //SaveUserAnswers1(gameKey);\n              CheckAnswers(0);\n            }}\n          >\n            <View>\n              <Text style={styles.answersText}>\n                {questionArray[activeQuestion].Answers[0]}\n              </Text>\n            </View>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              ...styles.answers,\n              backgroundColor: theme.buttons,\n              borderColor: theme.borderColor,\n            }}\n            onPress={() => {\n              SaveUserAnswers(usersAnswer.Answers[1], gameKey, user.email);\n              CheckAnswers(1);\n            }}\n          >\n            <View>\n              <Text style={styles.answersText}>\n                {questionArray[activeQuestion].Answers[1]}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.rightSide}>\n          <TouchableOpacity\n            style={{\n              ...styles.answers,\n              backgroundColor: theme.buttons,\n              borderColor: theme.borderColor,\n            }}\n            onPress={() => {\n              SaveUserAnswers(usersAnswer.Answers[2], gameKey, user.email);\n              CheckAnswers(2);\n            }}\n          >\n            <View>\n              <Text style={styles.answersText}>\n                {questionArray[activeQuestion].Answers[2]}\n              </Text>\n            </View>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              ...styles.answers,\n              backgroundColor: theme.buttons,\n              borderColor: theme.borderColor,\n            }}\n            onPress={() => {\n              SaveUserAnswers(usersAnswer.Answers[3], gameKey, user.email);\n              CheckAnswers(3);\n            }}\n          >\n            <View>\n              <Text style={styles.answersText}>\n                {questionArray[activeQuestion].Answers[3]}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    backgroundColor: '#146B66',\n  },\n  leftSide: {\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    width: '50%',\n    height: '100%',\n  },\n  rightSide: {\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    width: '50%',\n    height: '100%',\n  },\n  answersView: {\n    height: '90%',\n    width: '95%',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  answers: {\n    width: '90%',\n    height: '40%',\n    backgroundColor: '#AFEFDF',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: 'black',\n    borderLeftWidth: 5,\n    borderBottomWidth: 10,\n    borderRightWidth: 3,\n    borderTopWidth: 3,\n    shadowColor: 'black',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.5,\n    shadowRadius: 20,\n  },\n  answersText: {\n    fontSize: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontWeight: '600',\n  },\n  questionView: {\n    height: '30%',\n    width: '95%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderBottomColor: 'grey',\n    borderWidth: 3,\n    borderRadius: 20,\n  },\n  questionText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 30,\n    fontWeight: '600',\n    width: '80%',\n  },\n  underLineView: {\n    height: 1,\n    backgroundColor: 'black',\n    width: '95%',\n  },\n  userNameScoreText: {\n    width: '70%',\n    justifyContent: 'center',\n    fontSize: 22,\n    marginLeft: 20,\n    fontWeight: '500',\n  },\n  userScoreText: {\n    width: '20%',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    fontSize: 22,\n    fontWeight: '500',\n  },\n  userNameAndScoreView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modal: {\n    position: 'absolute',\n    top: '40%',\n    width: '90%',\n    height: '30%',\n    //backgroundColor: 'rgba(175, 239, 223, 0.8)',\n    backgroundColor: 'rgba(20, 107, 102, 0.9)',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 20,\n  },\n});\n\n/* const ScoreFeild = () => {\n  const [UsersArray, setUsersArray] = useState(['']);\n  useEffect(() => {\n    SnapShotUsers(setUsersArray);\n  }, [UsersArray]);\n  return (\n    <View style={{ flexDirection: 'row', marginBottom: 15 }}>\n      <View style={{ width: '50%' }}>\n        <View style={styles.userNameAndScoreView}>\n          <Text style={styles.userNameScoreText}>{UsersArray[0].userName}</Text>\n          <Text style={styles.userScoreText}>{UsersArray[0].userScore}</Text>\n        </View>\n        <View style={{ ...styles.underLineView, marginLeft: 20 }} />\n        <View style={styles.userNameAndScoreView}>\n          <Text style={styles.userNameScoreText}>esdsmil:</Text>\n          <Text style={styles.userScoreText}>6</Text>\n        </View>\n        <View style={{ ...styles.underLineView, marginLeft: 20 }} />\n      </View>\n      <View style={{ width: '50%' }}>\n        <View style={styles.userNameAndScoreView}>\n          <Text style={{ ...styles.userNameScoreText, marginLeft: 0 }}>\n            esdsmil:\n          </Text>\n          <Text style={styles.userScoreText}>6</Text>\n        </View>\n        <View style={styles.underLineView} />\n\n        <View style={styles.userNameAndScoreView}>\n          <Text style={{ ...styles.userNameScoreText, marginLeft: 0 }}>\n            emil:\n          </Text>\n          <Text style={{ ...styles.userScoreText }}>6</Text>\n        </View>\n        <View style={styles.underLineView} />\n      </View>\n    </View>\n  );\n}; */\n"]},"metadata":{},"sourceType":"module"}