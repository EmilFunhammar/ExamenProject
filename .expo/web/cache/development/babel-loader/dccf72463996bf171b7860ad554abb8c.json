{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport firebase, { firestore } from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport 'firebase/functions';\nimport 'firebase/storage';\nvar firebaseConfig = {\n  apiKey: 'AIzaSyDfjQkD4UeSNfs1yup3oprY9sQx0ZcH4Uk',\n  authDomain: 'examenproject-211e4.firebaseapp.com',\n  projectId: 'examenproject-211e4',\n  storageBucket: 'examenproject-211e4.appspot.com',\n  messagingSenderId: '321759435624',\n  appId: '1:321759435624:web:847f5ac5e161152646d4dd'\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport var auth = firebase.auth();\nvar gameSessionRef = firebase.firestore().collection('GameSession');\nvar questionRef = firebase.firestore().collection('Questions');\nexport function SnapShotStartGame(setStartGame, gameKey) {\n  gameSessionRef.doc(gameKey).onSnapshot(function (doc) {\n    setStartGame(doc.data().StartGame);\n  });\n}\nexport function SnapShotActiveQuestion(setActiveQuestion, gameKey) {\n  gameSessionRef.doc(gameKey).onSnapshot(function (doc) {\n    setActiveQuestion(doc.data().ActiveQuestion);\n  });\n}\nexport function SnapshotUserAnswerd(setAnswerdNum, gameKey) {\n  gameSessionRef.doc(gameKey).onSnapshot(function (doc) {\n    setAnswerdNum(doc.data().UsersAnswerd);\n  });\n}\nexport function SnapShotUsers(setUserArray, gameKey) {\n  gameSessionRef.doc(gameKey).onSnapshot(function (doc) {\n    setUserArray(doc.data().users);\n  });\n}\nexport function GetQuestionInfo(setQuestionArray, gameKey) {\n  var ary = [];\n  gameSessionRef.doc(gameKey).get().then(function (doc) {\n    ary = _toConsumableArray(doc.data().Questions);\n\n    for (var index = 0; index < ary.length; index++) {\n      ary[index].Answers.sort(function () {\n        return Math.random() - 0.5;\n      });\n    }\n\n    var size = 10;\n    var items = ary.slice(0, size);\n    setQuestionArray(items);\n  }).catch(function (error) {\n    return console.log('error', error);\n  });\n}\nexport function SaveUserAnswers1(gameKey) {\n  var ref = gameSessionRef.doc(gameKey);\n  ref.set({\n    test: 'emil'\n  }).catch(function (error) {\n    return console.log('error', error);\n  });\n}\nexport function SaveUserAnswers(userAnswerd, gameKey, userEmail) {\n  var ary = [];\n  var ref = gameSessionRef.doc(gameKey);\n  ref.get().then(function (doc) {\n    ary = _toConsumableArray(doc.data().users);\n\n    for (var index = 0; index < ary.length; index++) {\n      if (ary[index].userEmail === userEmail) {\n        ary[index].userAnswer = userAnswerd;\n        console.log('ary', ary[0].userAnswer);\n        ref.update({\n          users: firebase.firestore.FieldValue.arrayUnion(ary)\n        });\n      }\n    }\n\n    console.log('sucssesful');\n  }).catch(function (error) {\n    console.log('error', error);\n  });\n}\nexport function GetUsers(setUserArray, gameKey) {\n  gameSessionRef.doc(gameKey).get().then(function (doc) {\n    setUserArray(doc.data().users);\n  }).catch(function (error) {\n    console.log('error', error);\n  });\n}\nexport function GetGameQuestions(setGameQuestions) {\n  var questionArray = [];\n  questionRef.get().then(function (querySnapshot) {\n    querySnapshot.forEach(function (doc) {\n      questionArray.push(doc.data().question);\n    });\n    questionArray.sort(function () {\n      return Math.random() - 0.5;\n    });\n  });\n  setGameQuestions(questionArray);\n}\nexport function CreateGameSetup(questionsArray, sessionName, user) {\n  var userScore = 0;\n  var userEmail = user.email;\n  var userDisplayName = user.displayName;\n  var userAnswer = '';\n  var host = true;\n  var userAry = {\n    userEmail: userEmail,\n    userDisplayName: userDisplayName,\n    userScore: userScore,\n    userAnswer: userAnswer,\n    host: host\n  };\n  var ref = gameSessionRef.doc(sessionName);\n  ref.set({\n    StartGame: false,\n    UsersAnswerd: 0,\n    ActiveQuestion: 0,\n    Questions: questionsArray,\n    users: firebase.firestore.FieldValue.arrayUnion(userAry)\n  }).catch(function (error) {\n    return console.log('error', error);\n  });\n}\nexport function addUserAnswer(gameKey, userArray, user) {\n  console.log('hello', user);\n  var ref = gameSessionRef.doc(gameKey).collection('user.email').doc('answers');\n  ref.set({\n    userAnswers: 'emil'\n  });\n}\nexport function UpdateActiveQuestion(activeQuestion, gameKey) {\n  gameSessionRef.doc(gameKey).update({\n    ActiveQuestion: activeQuestion + 1\n  }).catch(function (error) {\n    return console.log('error', error);\n  });\n}\nexport function ResetAnswerdNum(gameKey) {\n  gameSessionRef.doc(gameKey).update({\n    UsersAnswerd: 0\n  }).catch(function (error) {\n    return console.log('error', error);\n  });\n}\nexport function UpdateAnswerdNum(AnswerdNum, gameKey) {\n  gameSessionRef.doc(gameKey).update({\n    UsersAnswerd: AnswerdNum + 1\n  }).catch(function (error) {\n    return console.log('error', error);\n  });\n}\nexport function UpdateUserScore(userEmail, gameKey) {\n  var ary = [];\n  var ref = gameSessionRef.doc(gameKey);\n  ref.get().then(function (doc) {\n    ary = _toConsumableArray(doc.data().users);\n\n    for (var index = 0; index < ary.length; index++) {\n      if (ary[index].userEmail === userEmail) {\n        ary[index].userScore += 1;\n        ref.update({\n          users: ary\n        });\n      }\n    }\n  });\n}\nexport function StartGame(gameKey) {\n  var ref = gameSessionRef;\n  ref.doc(gameKey).update({\n    StartGame: true\n  }).catch(function (error) {\n    return console.log('error', error);\n  });\n}\nexport function AddUserToGame(userDisplayName, userEmail, gameKey, setIfDocExsists) {\n  var userScore = 0;\n  var userAnswer = '';\n  var ary = {\n    userScore: userScore,\n    userEmail: userEmail,\n    userDisplayName: userDisplayName,\n    userAnswer: userAnswer\n  };\n  var ref = gameSessionRef.doc(gameKey);\n  ref.get().then(function (doc) {\n    if (doc.exists) {\n      ref.update({\n        users: firebase.firestore.FieldValue.arrayUnion(ary)\n      });\n      setIfDocExsists(true);\n    } else {\n      setIfDocExsists(false);\n    }\n  });\n}\nexport function UpdateUserName(currentUserName) {\n  var currentUser = firebase.auth().currentUser;\n  currentUser.updateProfile({\n    displayName: currentUserName\n  }).catch(function (error) {\n    console.log(error);\n  });\n}","map":{"version":3,"sources":["/Users/lanedator/Documents/GitHub/ExamenProject/firebase/Firebase.js"],"names":["firebase","firestore","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","apps","length","initializeApp","auth","gameSessionRef","collection","questionRef","SnapShotStartGame","setStartGame","gameKey","doc","onSnapshot","data","StartGame","SnapShotActiveQuestion","setActiveQuestion","ActiveQuestion","SnapshotUserAnswerd","setAnswerdNum","UsersAnswerd","SnapShotUsers","setUserArray","users","GetQuestionInfo","setQuestionArray","ary","get","then","Questions","index","Answers","sort","Math","random","size","items","slice","catch","error","console","log","SaveUserAnswers1","ref","set","test","SaveUserAnswers","userAnswerd","userEmail","userAnswer","update","FieldValue","arrayUnion","GetUsers","GetGameQuestions","setGameQuestions","questionArray","querySnapshot","forEach","push","question","CreateGameSetup","questionsArray","sessionName","user","userScore","email","userDisplayName","displayName","host","userAry","addUserAnswer","userArray","userAnswers","UpdateActiveQuestion","activeQuestion","ResetAnswerdNum","UpdateAnswerdNum","AnswerdNum","UpdateUserScore","AddUserToGame","setIfDocExsists","exists","UpdateUserName","currentUserName","currentUser","updateProfile"],"mappings":"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","sourcesContent":["import firebase, { firestore } from 'firebase';\n//import React, { useContext } from 'react';\n\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport 'firebase/functions';\nimport 'firebase/storage';\n\n//import { AuthContext } from './AuthContext';\n\nvar firebaseConfig = {\n  apiKey: 'AIzaSyDfjQkD4UeSNfs1yup3oprY9sQx0ZcH4Uk',\n  authDomain: 'examenproject-211e4.firebaseapp.com',\n  projectId: 'examenproject-211e4',\n  storageBucket: 'examenproject-211e4.appspot.com',\n  messagingSenderId: '321759435624',\n  appId: '1:321759435624:web:847f5ac5e161152646d4dd',\n};\n\n//const app = firebase.initializeApp(firebaseConfig);\nif (!firebase.apps.length) {\n  // const firebaseApp =\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport const auth = firebase.auth();\nlet gameSessionRef = firebase.firestore().collection('GameSession');\nlet questionRef = firebase.firestore().collection('Questions');\n\n//\n//\n//\n//\n// SNAPSHOTS\n\n//SnapShot on StartGame\nexport function SnapShotStartGame(setStartGame, gameKey) {\n  gameSessionRef.doc(gameKey).onSnapshot((doc) => {\n    setStartGame(doc.data().StartGame);\n  });\n}\n\n// SnapShot on ActiveQuestion\nexport function SnapShotActiveQuestion(setActiveQuestion, gameKey) {\n  gameSessionRef.doc(gameKey).onSnapshot((doc) => {\n    setActiveQuestion(doc.data().ActiveQuestion);\n  });\n}\n\nexport function SnapshotUserAnswerd(setAnswerdNum, gameKey) {\n  gameSessionRef.doc(gameKey).onSnapshot((doc) => {\n    setAnswerdNum(doc.data().UsersAnswerd);\n  });\n}\n\n// SnapShot on the users and there information\nexport function SnapShotUsers(setUserArray, gameKey) {\n  gameSessionRef.doc(gameKey).onSnapshot((doc) => {\n    setUserArray(doc.data().users);\n  });\n}\n//\n//\n//\n//\n// GETS\n\n// Get all the Questions and answers\nexport function GetQuestionInfo(setQuestionArray, gameKey) {\n  let ary = [];\n  gameSessionRef\n    .doc(gameKey)\n    .get()\n    .then((doc) => {\n      ary = [...doc.data().Questions];\n      for (let index = 0; index < ary.length; index++) {\n        ary[index].Answers.sort(() => Math.random() - 0.5);\n      }\n      const size = 10;\n      const items = ary.slice(0, size);\n      setQuestionArray(items);\n    })\n    .catch((error) => console.log('error', error));\n}\n\nexport function SaveUserAnswers1(gameKey) {\n  let ref = gameSessionRef.doc(gameKey);\n\n  ref\n    .set({\n      test: 'emil',\n    })\n    .catch((error) => console.log('error', error));\n}\n// save user answer\nexport function SaveUserAnswers(userAnswerd, gameKey, userEmail) {\n  let ary = [];\n  let ref = gameSessionRef.doc(gameKey);\n\n  ref\n    .get()\n    .then((doc) => {\n      ary = [...doc.data().users];\n      for (let index = 0; index < ary.length; index++) {\n        if (ary[index].userEmail === userEmail) {\n          ary[index].userAnswer = userAnswerd;\n          console.log('ary', ary[0].userAnswer);\n          ref.update({\n            users: firebase.firestore.FieldValue.arrayUnion(ary),\n          });\n        }\n      }\n      console.log('sucssesful');\n    })\n    .catch((error) => {\n      console.log('error', error);\n    });\n}\n\n//Get users Score and name\nexport function GetUsers(setUserArray, gameKey) {\n  gameSessionRef\n    .doc(gameKey)\n    .get()\n    .then((doc) => {\n      setUserArray(doc.data().users);\n    })\n    .catch((error) => {\n      console.log('error', error);\n    });\n}\n\n// Get questions from Firebase\nexport function GetGameQuestions(setGameQuestions) {\n  let questionArray = [];\n  questionRef.get().then(function (querySnapshot) {\n    querySnapshot.forEach(function (doc) {\n      questionArray.push(doc.data().question);\n    });\n    questionArray.sort(() => Math.random() - 0.5);\n  });\n  setGameQuestions(questionArray);\n}\n//\n//\n//\n//\n// SETS\n\n//UploadGameQuestion\nexport function CreateGameSetup(questionsArray, sessionName, user) {\n  let userScore = 0;\n  let userEmail = user.email;\n  let userDisplayName = user.displayName;\n  let userAnswer = '';\n  let host = true;\n  let userAry = { userEmail, userDisplayName, userScore, userAnswer, host };\n\n  let ref = gameSessionRef.doc(sessionName);\n  /* ref.set({\n    google: 'emil',\n  }); */\n  ref\n    .set({\n      StartGame: false,\n      UsersAnswerd: 0,\n      ActiveQuestion: 0,\n      Questions: questionsArray,\n      users: firebase.firestore.FieldValue.arrayUnion(userAry),\n    })\n    .catch((error) => console.log('error', error));\n}\n\n// bugg\nexport function addUserAnswer(gameKey, userArray, user) {\n  console.log('hello', user);\n\n  let ref = gameSessionRef.doc(gameKey).collection('user.email').doc('answers');\n\n  ref.set({\n    userAnswers: 'emil',\n  });\n  //ref.get().then((doc) => {\n  /*   userArray.forEach((element) => {\n      if (doc.exists) {\n        let userName = element.userDisplayName;\n        ref.update({\n          usersAnswer: 'Emil',\n          //: firebase.firestore.FieldValue.arrayUnion('ary'),\n        });\n      }\n    }); */\n  //});\n}\n\n//\n//\n//\n//\n// UPDATES\n\n//Update ActiveQuestion\nexport function UpdateActiveQuestion(activeQuestion, gameKey) {\n  gameSessionRef\n    .doc(gameKey)\n    .update({\n      ActiveQuestion: activeQuestion + 1,\n    })\n    .catch((error) => console.log('error', error));\n}\n\n//Reset AnswerdNum\nexport function ResetAnswerdNum(gameKey) {\n  gameSessionRef\n    .doc(gameKey)\n    .update({\n      UsersAnswerd: 0,\n    })\n    .catch((error) => console.log('error', error));\n}\n\n//Update AnswerdNum\nexport function UpdateAnswerdNum(AnswerdNum, gameKey) {\n  gameSessionRef\n    .doc(gameKey)\n    .update({\n      UsersAnswerd: AnswerdNum + 1,\n    })\n    .catch((error) => console.log('error', error));\n}\n\n// Update UserScore\nexport function UpdateUserScore(userEmail, gameKey) {\n  let ary = [];\n  let ref = gameSessionRef.doc(gameKey);\n  ref.get().then((doc) => {\n    ary = [...doc.data().users];\n    for (let index = 0; index < ary.length; index++) {\n      if (ary[index].userEmail === userEmail) {\n        ary[index].userScore += 1;\n        ref.update({\n          users: ary,\n        });\n      }\n    }\n  });\n}\n\n//StartGame\nexport function StartGame(gameKey) {\n  let ref = gameSessionRef;\n\n  ref\n    .doc(gameKey)\n    .update({ StartGame: true })\n    .catch((error) => console.log('error', error));\n}\n\nexport function AddUserToGame(\n  userDisplayName,\n  userEmail,\n  gameKey,\n  setIfDocExsists\n) {\n  let userScore = 0;\n  let userAnswer = '';\n  let ary = { userScore, userEmail, userDisplayName, userAnswer };\n  let ref = gameSessionRef.doc(gameKey);\n  ref.get().then((doc) => {\n    if (doc.exists) {\n      ref.update({\n        users: firebase.firestore.FieldValue.arrayUnion(ary),\n      });\n      setIfDocExsists(true);\n    } else {\n      setIfDocExsists(false);\n    }\n  });\n}\n\nexport function UpdateUserName(currentUserName) {\n  const currentUser = firebase.auth().currentUser;\n  currentUser\n    .updateProfile({\n      displayName: currentUserName,\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\n/* export function doesDocExist(gameKey, setIfDocExsists) {\n  gameSessionRef\n    .doc(gameKey)\n    .get()\n    .then((doc) => {\n      if (doc.exists) {\n        setIfDocExsists(true);\n      }\n    });\n} */\n"]},"metadata":{},"sourceType":"module"}