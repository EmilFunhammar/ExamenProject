{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lanedator/Documents/GitHub/ExamenProject/src/screens/createGameScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { GetGameQuestions, CreateGameSetup } from \"../firebase/Firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ThemeContext } from \"../context/ThemeContext\";\nimport { useNavigation } from '@react-navigation/native';\nexport default function CreateGameComponent() {\n  var navigation = useNavigation();\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  var _useContext2 = useContext(ThemeContext),\n      theme = _useContext2.theme,\n      toggleTheme = _useContext2.toggleTheme;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      key = _useState2[0],\n      setKey = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gameQuestions = _useState4[0],\n      setGameQuestions = _useState4[1];\n\n  useEffect(function () {\n    GetGameQuestions(setGameQuestions);\n  }, []);\n  return React.createElement(LinearGradient, {\n    colors: theme.linearBackgroundColor,\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      backgroundColor: theme.backgroundColor\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: _objectSpread({}, styles.textView),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.text), {}, {\n      color: theme.color\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Ange spel nyckel\"), React.createElement(TextInput, {\n    style: _objectSpread(_objectSpread({}, styles.textInput), {}, {\n      color: theme.color\n    }),\n    placeholderTextColor: theme.placeholderTextColor,\n    placeholder: \"Ange spel nyckel h\\xE4r:\",\n    onChangeText: function onChangeText(text) {\n      return setKey(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.underLineView), {}, {\n      backgroundColor: theme.color\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: _objectSpread(_objectSpread({}, styles.button), {}, {\n      backgroundColor: theme.buttons,\n      shadowColor: theme.shadowColor\n    }),\n    onPress: function onPress() {\n      CreateGameSetup(gameQuestions, key, user);\n      navigation.navigate('ParticipantScreen', {\n        gameKey: key\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.buttonText), {}, {\n      color: theme.buttonsText\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"G\\xE5 till lobby\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#146B66'\n  },\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%',\n    height: '15%',\n    marginBottom: 80,\n    borderRadius: 15,\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 10\n  },\n  buttonText: {\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  text: {\n    fontSize: 26,\n    fontWeight: '600'\n  },\n  textInput: {\n    marginTop: 40,\n    fontSize: 20,\n    fontWeight: '700'\n  },\n  textView: {\n    marginTop: 100,\n    width: '80%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20\n  },\n  underLineView: {\n    height: 2,\n    backgroundColor: 'black',\n    marginTop: 3,\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["/Users/lanedator/Documents/GitHub/ExamenProject/src/screens/createGameScreen.js"],"names":["React","useContext","useState","useEffect","LinearGradient","GetGameQuestions","CreateGameSetup","AuthContext","ThemeContext","useNavigation","CreateGameComponent","navigation","user","theme","toggleTheme","key","setKey","gameQuestions","setGameQuestions","linearBackgroundColor","styles","container","backgroundColor","textView","text","color","textInput","placeholderTextColor","underLineView","button","buttons","shadowColor","navigate","gameKey","buttonText","buttonsText","StyleSheet","create","flex","alignItems","justifyContent","width","height","marginBottom","borderRadius","shadowOffset","shadowOpacity","shadowRadius","fontSize","fontWeight","marginTop"],"mappings":"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","sourcesContent":["//REACT\nimport React, { useContext, useState, useEffect } from 'react'\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n} from 'react-native'\nimport { LinearGradient } from 'expo-linear-gradient'\n\n//FIREBASE\nimport { GetGameQuestions, CreateGameSetup } from '../firebase/Firebase'\n\n//CONTEXT\nimport { AuthContext } from '../context/AuthContext'\nimport { ThemeContext } from '../context/ThemeContext'\n\n//NAVIGATION\nimport { useNavigation } from '@react-navigation/native'\n\nexport default function CreateGameComponent() {\n  const navigation = useNavigation()\n  const { user } = useContext(AuthContext)\n  const { theme, toggleTheme } = useContext(ThemeContext)\n\n  const [key, setKey] = useState('')\n  const [gameQuestions, setGameQuestions] = useState()\n\n  useEffect(() => {\n    GetGameQuestions(setGameQuestions)\n  }, [])\n  return (\n    <LinearGradient\n      colors={theme.linearBackgroundColor}\n      style={{ ...styles.container, backgroundColor: theme.backgroundColor }}\n    >\n      <View\n        style={{\n          ...styles.textView,\n        }}\n      >\n        <Text style={{ ...styles.text, color: theme.color }}>\n          Ange spel nyckel\n        </Text>\n\n        <TextInput\n          style={{ ...styles.textInput, color: theme.color }}\n          placeholderTextColor={theme.placeholderTextColor}\n          placeholder=\"Ange spel nyckel här:\"\n          onChangeText={(text) => setKey(text)}\n        />\n        <View\n          style={{\n            ...styles.underLineView,\n            backgroundColor: theme.color,\n          }}\n        />\n      </View>\n\n      <TouchableOpacity\n        style={{\n          ...styles.button,\n          backgroundColor: theme.buttons,\n          shadowColor: theme.shadowColor,\n        }}\n        onPress={() => {\n          CreateGameSetup(gameQuestions, key, user)\n          navigation.navigate('ParticipantScreen', { gameKey: key })\n        }}\n      >\n        <Text style={{ ...styles.buttonText, color: theme.buttonsText }}>\n          Gå till lobby\n        </Text>\n      </TouchableOpacity>\n    </LinearGradient>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#146B66',\n  },\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%',\n    height: '15%',\n    marginBottom: 80,\n    borderRadius: 15,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.3,\n    shadowRadius: 10,\n  },\n  buttonText: {\n    fontSize: 30,\n    fontWeight: 'bold',\n  },\n  text: {\n    fontSize: 26,\n    fontWeight: '600',\n  },\n  textInput: {\n    marginTop: 40,\n    fontSize: 20,\n    fontWeight: '700',\n  },\n  textView: {\n    marginTop: 100,\n    width: '80%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20,\n  },\n  underLineView: {\n    height: 2,\n    backgroundColor: 'black',\n    marginTop: 3,\n    width: '100%',\n  },\n})\n"]},"metadata":{},"sourceType":"module"}