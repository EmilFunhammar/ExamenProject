{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lanedator/Documents/GitHub/ExamenProject/src/screens/joinGameScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useRef } from 'react';\nimport { AddUserToGame } from \"../firebase/Firebase\";\nimport { ThemeContext } from \"../context/ThemeContext\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useNavigation } from '@react-navigation/native';\nexport default function JoinGame() {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      key = _useState2[0],\n      setKey = _useState2[1];\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var _useContext2 = useContext(AuthContext),\n      user = _useContext2.user;\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ifDocExsists = _useState4[0],\n      setIfDocExsists = _useState4[1];\n\n  var num = useRef(0);\n\n  var navigate = function navigate() {\n    navigation.navigate('ParticipantScreen', {\n      gameKey: key\n    });\n  };\n\n  useEffect(function () {\n    if (num.current !== 0) {\n      if (ifDocExsists === true) {\n        navigate();\n      } else {\n        Alert.alert('Fel nyckel');\n      }\n    }\n\n    num.current += 1;\n  }, [ifDocExsists]);\n  return React.createElement(LinearGradient, {\n    colors: theme.linearBackgroundColor,\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.textView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.text), {}, {\n      color: theme.color\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Ange spel nyckel\"), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholderTextColor: theme.placeholderTextColor,\n    placeholder: \"Ange nyckel h\\xE4r:\",\n    onChangeText: function onChangeText(text) {\n      return setKey(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.underLineView), {}, {\n      backgroundColor: theme.color\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: _objectSpread(_objectSpread({}, styles.button), {}, {\n      backgroundColor: theme.linearButton,\n      shadowColor: theme.shadowColor\n    }),\n    onPress: function onPress() {\n      AddUserToGame(user.displayName, user.email, key, setIfDocExsists);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"G\\xE5 med lobby\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#146B66'\n  },\n  button: {\n    width: '80%',\n    height: '15%',\n    marginBottom: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 15,\n    shadowColor: 'white',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 10\n  },\n  buttonText: {\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  text: {\n    fontSize: 26,\n    fontWeight: '600'\n  },\n  textInput: {\n    fontWeight: '700',\n    marginTop: 40,\n    fontSize: 20\n  },\n  textView: {\n    marginTop: 100,\n    width: '80%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  underLineView: {\n    height: 2,\n    backgroundColor: 'black',\n    marginTop: 3,\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["/Users/lanedator/Documents/GitHub/ExamenProject/src/screens/joinGameScreen.js"],"names":["React","useContext","useState","useEffect","LinearGradient","useRef","AddUserToGame","ThemeContext","AuthContext","useNavigation","JoinGame","navigation","key","setKey","theme","user","ifDocExsists","setIfDocExsists","num","navigate","gameKey","current","Alert","alert","linearBackgroundColor","styles","container","textView","text","color","textInput","placeholderTextColor","underLineView","backgroundColor","button","linearButton","shadowColor","displayName","email","buttonText","StyleSheet","create","flex","alignItems","justifyContent","width","height","marginBottom","borderRadius","shadowOffset","shadowOpacity","shadowRadius","fontSize","fontWeight","marginTop"],"mappings":"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","sourcesContent":["//REACT\nimport React, { useContext, useState, useEffect } from 'react'\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n  Alert,\n} from 'react-native'\nimport { LinearGradient } from 'expo-linear-gradient'\nimport { useRef } from 'react'\n\n//FIREBASE\nimport { AddUserToGame } from '../firebase/Firebase'\n\n//CONTEXT\nimport { ThemeContext } from '../context/ThemeContext'\nimport { AuthContext } from '../context/AuthContext'\n\n//NAVIGATION\nimport { useNavigation } from '@react-navigation/native'\n\nexport default function JoinGame() {\n  const navigation = useNavigation()\n  const [key, setKey] = useState('')\n  const { theme } = useContext(ThemeContext)\n  const { user } = useContext(AuthContext)\n  const [ifDocExsists, setIfDocExsists] = useState()\n  let num = useRef(0)\n\n  const navigate = () => {\n    navigation.navigate('ParticipantScreen', { gameKey: key })\n  }\n\n  useEffect(() => {\n    if (num.current !== 0) {\n      if (ifDocExsists === true) {\n        navigate()\n      } else {\n        Alert.alert('Fel nyckel')\n      }\n    }\n    num.current += 1\n  }, [ifDocExsists])\n\n  return (\n    <LinearGradient\n      colors={theme.linearBackgroundColor}\n      style={styles.container}\n    >\n      <View style={styles.textView}>\n        <Text style={{ ...styles.text, color: theme.color }}>\n          Ange spel nyckel\n        </Text>\n        <TextInput\n          style={styles.textInput}\n          placeholderTextColor={theme.placeholderTextColor}\n          placeholder=\"Ange nyckel här:\"\n          onChangeText={(text) => setKey(text)}\n        />\n        <View\n          style={{ ...styles.underLineView, backgroundColor: theme.color }}\n        />\n      </View>\n      <TouchableOpacity\n        style={{\n          ...styles.button,\n          backgroundColor: theme.linearButton,\n          shadowColor: theme.shadowColor,\n        }}\n        onPress={() => {\n          AddUserToGame(user.displayName, user.email, key, setIfDocExsists)\n        }}\n      >\n        <Text style={styles.buttonText}>Gå med lobby</Text>\n      </TouchableOpacity>\n    </LinearGradient>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#146B66',\n  },\n  button: {\n    width: '80%',\n    height: '15%',\n    marginBottom: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 15,\n    shadowColor: 'white',\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.3,\n    shadowRadius: 10,\n  },\n\n  buttonText: {\n    fontSize: 30,\n    fontWeight: 'bold',\n  },\n  text: {\n    fontSize: 26,\n    fontWeight: '600',\n  },\n  textInput: {\n    fontWeight: '700',\n    marginTop: 40,\n    fontSize: 20,\n  },\n  textView: {\n    marginTop: 100,\n    width: '80%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  underLineView: {\n    height: 2,\n    backgroundColor: 'black',\n    marginTop: 3,\n    width: '100%',\n  },\n})\n"]},"metadata":{},"sourceType":"module"}